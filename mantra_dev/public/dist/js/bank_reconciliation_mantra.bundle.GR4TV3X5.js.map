{
  "version": 3,
  "sources": ["../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/panel_manager.js", "../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/actions_panel/actions_panel_manager.js", "../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/actions_panel/create_tab.js", "../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/actions_panel/details_tab.js", "../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/actions_panel/match_tab.js", "../../../../../apps/mantra_dev/mantra_dev/public/js/bank_reconciliation_mantra/summary_number_card.js"],
  "sourcesContent": ["frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.PanelManager = class PanelManager {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.init_panels();\n\t}\n\n\tasync init_panels() {\n\t\tthis.transactions = await this.get_bank_transactions();\n\n\t\tthis.$wrapper.empty();\n\t\tthis.$panel_wrapper = this.$wrapper.append(`\n\t\t\t<div class=\"panel-container d-flex\"></div>\n\t\t`).find(\".panel-container\");\n\n\t\tthis.render_panels()\n\t}\n\n\tasync get_bank_transactions() {\n\t\tlet transactions = await frappe.call({\n\t\t\tmethod:\n\t\t\t\t\"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.get_bank_transactions\",\n\t\t\targs: {\n\t\t\t\tbank_account: this.doc.bank_account,\n\t\t\t\tfrom_date: this.doc.bank_statement_from_date,\n\t\t\t\tto_date: this.doc.bank_statement_to_date,\n\t\t\t\torder_by: this.order || \"date asc\",\n\t\t\t},\n\t\t\tfreeze: true,\n\t\t\tfreeze_message: __(\"Fetching Bank Transactions\"),\n\t\t}).then(response => response.message);\n\t\treturn transactions;\n\t}\n\n\trender_panels() {\n\t\tthis.set_actions_panel_default_states();\n\n\t\tif (!this.transactions || !this.transactions.length) {\n\t\t\tthis.render_no_transactions();\n\t\t} else {\n\t\t\tthis.render_list_panel();\n\n\t\t\tlet first_transaction = this.transactions[0];\n\t\t\tthis.$list_container.find(\"#\" + first_transaction.name).click();\n\t\t}\n\t}\n\n\tset_actions_panel_default_states() {\n\t\t// Init actions panel states to store for persistent views\n\t\tthis.actions_tab = \"match_voucher-tab\";\n\t\tthis.actions_filters = {\n\t\t\tpayment_entry: 0,\n\t\t\tjournal_entry: 0,\n\t\t\tpurchase_invoice: 1,\n\t\t\tsales_invoice: 1,\n\t\t\tloan_repayment: 0,\n\t\t\tloan_disbursement: 0,\n\t\t\texpense_claim: 0,\n\t\t\tbank_transaction: 0,\n\t\t\texact_match: 0,\n\t\t\texact_party_match: 0,\n\t\t\tunpaid_invoices: 1\n\t\t}\n\t}\n\n\trender_no_transactions() {\n\t\tthis.$panel_wrapper.empty();\n\t\tthis.$panel_wrapper.append(`\n\t\t\t<div class=\"no-transactions\">\n\t\t\t\t<img src=\"/assets/frappe/images/ui-states/list-empty-state.svg\" alt=\"Empty State\">\n\t\t\t\t<p>${__(\"No Transactions found for the current filters.\")}</p>\n\t\t\t</div>\n\t\t`);\n\t}\n\n\trender_list_panel() {\n\t\tthis.$panel_wrapper.append(`\n\t\t\t<div class=\"list-panel\">\n\t\t\t\t<div class=\"sort-by\"></div>\n\t\t\t\t<div class=\"list-container\"></div>\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_sort_area();\n\t\tthis.render_transactions_list();\n\t}\n\n\trender_actions_panel() {\n\t\tthis.actions_panel =  new erpnext.accounts.bank_reconciliation.ActionsPanelManager({\n\t\t\t$wrapper: this.$panel_wrapper,\n\t\t\ttransaction: this.active_transaction,\n\t\t\tdoc: this.doc,\n\t\t\tpanel_manager: this\n\t\t});\n\t}\n\n\trender_sort_area() {\n\t\tthis.$sort_area = this.$panel_wrapper.find(\".sort-by\");\n\t\tthis.$sort_area.append(`\n\t\t\t<div class=\"sort-by-title\"> ${__(\"Sort By\")} </div>\n\t\t\t<div class=\"sort-by-selector p-10\"></div>\n\t\t`);\n\n\t\tvar me = this;\n\t\tnew frappe.ui.SortSelector({\n\t\t\tparent: me.$sort_area.find(\".sort-by-selector\"),\n\t\t\targs: {\n\t\t\t\tsort_by: me.order_by || \"date\",\n\t\t\t\tsort_order: me.order_direction || \"asc\",\n\t\t\t\toptions: [\n\t\t\t\t\t{fieldname: \"date\", label: __(\"Date\")},\n\t\t\t\t\t{fieldname: \"withdrawal\", label: __(\"Withdrawal\")},\n\t\t\t\t\t{fieldname: \"deposit\", label: __(\"Deposit\")},\n\t\t\t\t\t{fieldname: \"unallocated_amount\", label: __(\"Unallocated Amount\")}\n\t\t\t\t]\n\t\t\t},\n\t\t\tchange: function(sort_by, sort_order) {\n\t\t\t\t// Globally set the order used in the re-rendering of the list\n\t\t\t\tme.order_by = (sort_by || me.order_by || \"date\");\n\t\t\t\tme.order_direction = (sort_order || me.order_direction || \"asc\");\n\t\t\t\tme.order =  me.order_by + \" \" + me.order_direction;\n\n\t\t\t\t// Re-render the list\n\t\t\t\tme.init_panels();\n\t\t\t}\n\t\t});\n\t}\n\n\trender_transactions_list() {\n\t\tthis.$list_container = this.$panel_wrapper.find(\".list-container\");\n\n\t\tthis.transactions.map(transaction => {\n\t\t\tlet amount = transaction.deposit || transaction.withdrawal;\n\t\t\tlet symbol = transaction.withdrawal ? \"-\" : \"+\";\n\n\t\t\tlet $row = this.$list_container.append(`\n\t\t\t\t<div id=\"${transaction.name}\" class=\"transaction-row p-10\">\n\t\t\t\t\t<!-- Date & Amount -->\n\t\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t\t<div class=\"w-50\">\n\t\t\t\t\t\t\t<span title=\"${__(\"Date\")}\">${frappe.format(transaction.date, {fieldtype: \"Date\"})}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"w-50 bt-amount-contianer\">\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\ttitle=\"${__(\"Amount\")}\"\n\t\t\t\t\t\t\t\tclass=\"bt-amount ${transaction.withdrawal ? 'text-danger' : 'text-success'}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<b>${symbol} ${format_currency(amount, transaction.currency)}</b>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<!-- Description, Reference, Party -->\n\t\t\t\t\t<div\n\t\t\t\t\t\ttitle=\"${__(\"Account Holder\")}\"\n\t\t\t\t\t\tclass=\"account-holder ${transaction.bank_party_name ? '' : 'hide'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"account-holder-value\">${transaction.bank_party_name}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\ttitle=\"${__(\"Description\")}\"\n\t\t\t\t\t\tclass=\"description ${transaction.description ? '' : 'hide'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"description-value\">${transaction.description}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\ttitle=\"${__(\"Reference\")}\"\n\t\t\t\t\t\tclass=\"reference ${transaction.reference_number ? '' : 'hide'}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"reference-value\">${transaction.reference_number}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`).find(\"#\" + transaction.name);\n\n\t\t\t$row.on(\"click\", () => {\n\t\t\t\t$row.addClass(\"active\").siblings().removeClass(\"active\");\n\n\t\t\t\t// this.transaction's objects get updated, we want the latest values\n\t\t\t\tthis.active_transaction = this.transactions.find(({name}) => name === transaction.name);\n\t\t\t\tthis.render_actions_panel();\n\t\t\t})\n\t\t})\n\t}\n\n\trefresh_transaction(updated_amount=null, reference_number=null, party_type=null, party=null) {\n\t\t// Update the transaction object's & view's unallocated_amount **OR** other details\n\t\tlet id = this.active_transaction.name;\n\t\tlet current_index = this.transactions.findIndex(({name}) => name === id);\n\n\t\tlet $current_transaction = this.$list_container.find(\"#\" + id);\n\t\tlet transaction = this.transactions[current_index];\n\n\t\tif (updated_amount) {\n\t\t\t// update amount is > 0 always [src: `after_transaction_reconcile()`]\n\t\t\tthis.transactions[current_index][\"unallocated_amount\"] = updated_amount;\n\t\t} else {\n\t\t\tthis.transactions[current_index] = {\n\t\t\t\t...transaction,\n\t\t\t\treference_number: reference_number,\n\t\t\t\tparty_type: party_type,\n\t\t\t\tparty: party\n\t\t\t};\n\t\t\t// Update Reference Number in List\n\t\t\t$current_transaction.find(\".reference\").removeClass(\"hide\");\n\t\t\t$current_transaction.find(\".reference-value\").text(reference_number || \"--\");\n\t\t}\n\n\t\t$current_transaction.click();\n\t}\n\n\tmove_to_next_transaction() {\n\t\t// Remove the current transaction from the list and move to the next/previous one\n\t\tlet id = this.active_transaction.name;\n\t\tlet $current_transaction = this.$list_container.find(\"#\" + id);\n\t\tlet current_index = this.transactions.findIndex(({name}) => name === id);\n\n\t\tlet next_transaction = this.transactions[current_index + 1];\n\t\tlet previous_transaction = this.transactions[current_index - 1];\n\n\t\tif (next_transaction) {\n\t\t\tthis.active_transaction = next_transaction;\n\t\t\tlet $next_transaction = $current_transaction.next();\n\t\t\t$next_transaction.click();\n\t\t} else if (previous_transaction) {\n\t\t\tthis.active_transaction = previous_transaction;\n\t\t\tlet $previous_transaction = $current_transaction.prev();\n\t\t\t$previous_transaction.click();\n\t\t}\n\n\t\tthis.transactions.splice(current_index, 1);\n\t\t$current_transaction.remove();\n\n\t\tif (!next_transaction && !previous_transaction) {\n\t\t\tthis.active_transaction = null;\n\t\t\tthis.render_no_transactions();\n\t\t}\n\n\t}\n}", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.ActionsPanelManager = class ActionsPanelManager {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.init_actions_container();\n\t\tthis.render_tabs();\n\n\t\t// Default to last selected tab\n\t\tthis.$actions_container.find(\"#\" + this.panel_manager.actions_tab).trigger(\"click\");\n\t}\n\n\tinit_actions_container() {\n\t\tif (this.$wrapper.find(\".actions-panel\").length > 0) {\n\t\t\tthis.$actions_container = this.$wrapper.find(\".actions-panel\");\n\t\t\tthis.$actions_container.empty();\n\t\t} else {\n\t\t\tthis.$actions_container = this.$wrapper.append(`\n\t\t\t\t<div class=\"actions-panel\"></div>\n\t\t\t`).find(\".actions-panel\");\n\t\t}\n\n\t\tthis.$actions_container.append(`\n\t\t\t<div class=\"form-tabs-list\">\n\t\t\t\t<ul class=\"nav form-tabs\" role=\"tablist\" aria-label=\"Action Tabs\">\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div class=\"tab-content p-10\"></div>\n\t\t`);\n\t}\n\n\trender_tabs() {\n\t\tthis.tabs_list_ul = this.$actions_container.find(\".form-tabs\");\n\t\tthis.$tab_content = this.$actions_container.find(\".tab-content\");\n\n\t\t// Remove any listeners from previous tabs\n\t\tfrappe.realtime.off(\"doc_update\");\n\n\t\t[\"Details\", \"Match Voucher\", \"Create Voucher\"].forEach(tab => {\n\t\t\tlet tab_name = frappe.scrub(tab);\n\t\t\tthis.add_tab(tab_name, tab);\n\n\t\t\tlet $tab_link = this.tabs_list_ul.find(`#${tab_name}-tab`);\n\t\t\t$tab_link.on(\"click\", () => {\n\t\t\t\tthis.$tab_content.empty();\n\n\t\t\t\tif (tab == \"Details\") {\n\t\t\t\t\tnew erpnext.accounts.bank_reconciliation.DetailsTab({\n\t\t\t\t\t\tactions_panel: this,\n\t\t\t\t\t\ttransaction: this.transaction,\n\t\t\t\t\t\tpanel_manager: this.panel_manager,\n\t\t\t\t\t});\n\t\t\t\t} else if (tab == \"Match Voucher\") {\n\t\t\t\t\tnew erpnext.accounts.bank_reconciliation.MatchTab({\n\t\t\t\t\t\tactions_panel: this,\n\t\t\t\t\t\ttransaction: this.transaction,\n\t\t\t\t\t\tpanel_manager: this.panel_manager,\n\t\t\t\t\t\tdoc: this.doc,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnew erpnext.accounts.bank_reconciliation.CreateTab({\n\t\t\t\t\t\tactions_panel: this,\n\t\t\t\t\t\ttransaction: this.transaction,\n\t\t\t\t\t\tpanel_manager: this.panel_manager,\n\t\t\t\t\t\tcompany: this.doc.company,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tadd_tab(tab_name, tab) {\n\t\tthis.tabs_list_ul.append(`\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-actions-link\"\n\t\t\t\t\tid=\"${tab_name}-tab\" data-toggle=\"tab\"\n\t\t\t\t\thref=\"#\" role=\"tab\" aria-controls=\"${tab}\"\n\t\t\t\t>\n\t\t\t\t\t${__(tab)}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`);\n\t}\n\n\tafter_transaction_reconcile(message, with_new_voucher=false, document_type) {\n\t\t// Actions after a transaction is matched with a voucher\n\t\t// `with_new_voucher`: If a new voucher was created and reconciled with the transaction\n\t\tlet doc = message;\n\t\tlet unallocated_amount = flt(doc.unallocated_amount);\n\t\tif (unallocated_amount > 0) {\n\t\t\t// if partial update this.transaction, re-click on list row\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\n\t\t\t\t\t\"Bank Transaction {0} Partially {1}\",\n\t\t\t\t\t[this.transaction.name, with_new_voucher ? \"Reconciled\" : \"Matched\"]\n\t\t\t\t),\n\t\t\t\tindicator: \"blue\"\n\t\t\t});\n\t\t\tthis.panel_manager.refresh_transaction(unallocated_amount);\n\t\t} else {\n\t\t\tlet alert_string = __(\"Bank Transaction {0} Matched\", [this.transaction.name])\n\t\t\tif (with_new_voucher) {\n\t\t\t\talert_string = __(\"Bank Transaction {0} reconciled with a new {1}\", [this.transaction.name, document_type]);\n\t\t\t}\n\t\t\tfrappe.show_alert({message: alert_string, indicator: \"green\"});\n\t\t\tthis.panel_manager.move_to_next_transaction();\n\t\t}\n\t}\n}", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.CreateTab = class CreateTab {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.panel_manager.actions_tab = \"create_voucher-tab\";\n\n\t\tthis.create_field_group = new frappe.ui.FieldGroup({\n\t\t\tfields: this.get_create_tab_fields(),\n\t\t\tbody: this.actions_panel.$tab_content,\n\t\t\tcard_layout: true,\n\t\t});\n\t\tthis.create_field_group.make();\n\t}\n\n\tcreate_voucher() {\n\t\tvar me = this;\n\t\tlet values = this.create_field_group.get_values();\n\t\tlet document_type = values.document_type;\n\n\t\t// Create new voucher and delete or refresh current BT row depending on reconciliation\n\t\tthis.create_voucher_bts(\n\t\t\tfalse,\n\t\t\t(message) => me.actions_panel.after_transaction_reconcile(\n\t\t\t\tmessage, true, document_type\n\t\t\t)\n\t\t);\n\t}\n\n\tedit_in_full_page() {\n\t\tthis.create_voucher_bts(true, (message) => {\n\t\t\tconst doc = frappe.model.sync(message);\n\t\t\tlet doctype = doc[0].doctype, docname = doc[0].name;\n\n\t\t\t// Reconcile and update the view\n\t\t\t// when the voucher is submitted in another tab\n\t\t\tfrappe.socketio.doc_subscribe(doctype, docname);\n\t\t\tfrappe.realtime.off(\"doc_update\");\n\t\t\tfrappe.realtime.on(\"doc_update\", (data) => {\n\t\t\t\tif (data.doctype === doctype && data.name === docname) {\n\t\t\t\t\tthis.reconcile_new_voucher(doctype, docname);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfrappe.open_in_new_tab = true;\n\t\t\tfrappe.set_route(\"Form\", doctype, docname);\n\t\t});\n\t}\n\n\tcreate_voucher_bts(allow_edit=false, success_callback) {\n\t\t// Create PE or JV and run `success_callback`\n\t\tlet values = this.create_field_group.get_values();\n\t\tlet document_type = values.document_type;\n\t\tlet method = \"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra\";\n\t\tlet args = {\n\t\t\tbank_transaction_name: this.transaction.name,\n\t\t\treference_number: values.reference_number,\n\t\t\treference_date: values.reference_date,\n\t\t\tparty_type: values.party_type,\n\t\t\tparty: values.party,\n\t\t\tposting_date: values.posting_date,\n\t\t\tmode_of_payment: values.mode_of_payment,\n\t\t\tallow_edit: allow_edit,\n\t\t};\n\n\t\tif (document_type === \"Payment Entry\") {\n\t\t\tmethod = method + \".create_payment_entry_bts\";\n\t\t\targs = {\n\t\t\t\t...args,\n\t\t\t\tproject: values.project,\n\t\t\t\tcost_center: values.cost_center\n\t\t\t}\n\t\t} else {\n\t\t\tmethod =  method + \".create_journal_entry_bts\";\n\t\t\targs = {\n\t\t\t\t...args,\n\t\t\t\tentry_type: values.journal_entry_type,\n\t\t\t\tsecond_account: values.second_account,\n\t\t\t}\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tcallback: (response) => {\n\t\t\t\tif (response.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"Failed to create {0} against {1}\", [document_type, this.transaction.name]),\n\t\t\t\t\t\tindicator: \"red\"\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (response.message) {\n\t\t\t\t\tsuccess_callback(response.message);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t}\n\n\treconcile_new_voucher(doctype, docname) {\n\t\t// If no response, newly created doc is in draft state\n\t\t// If deleted in response, newly created doc is deleted\n\t\t// If doc object in response, newly created doc is submitted (can be reconciled)\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.reconcile_voucher\",\n\t\t\targs: {\n\t\t\t\ttransaction_name: this.transaction.name,\n\t\t\t\tamount: this.transaction.unallocated_amount,\n\t\t\t\tvoucher_type: doctype,\n\t\t\t\tvoucher_name: docname,\n\t\t\t},\n\t\t\tcallback: (response) => {\n\t\t\t\tif (response.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"Failed to reconcile new {0} against {1}\", [doctype, me.transaction.name]),\n\t\t\t\t\t\tindicator: \"red\"\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (response.message && Object.keys(response.message).length > 0) {\n\t\t\t\t\tif (response.message.deleted) {\n\t\t\t\t\t\tfrappe.realtime.off(\"doc_update\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tme.actions_panel.after_transaction_reconcile(\n\t\t\t\t\t\tresponse.message, true, doctype\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\n\tget_create_tab_fields() {\n\t\tlet party_type = this.transaction.party_type || (flt(this.transaction.withdrawal) > 0 ? \"Supplier\" : \"Customer\");\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Document Type\"),\n\t\t\t\tfieldname: \"document_type\",\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\toptions: `Payment Entry\\nJournal Entry`,\n\t\t\t\tdefault: \"Payment Entry\",\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet value = this.create_field_group.get_value(\"document_type\");\n\t\t\t\t\tlet fields = this.create_field_group;\n\n\t\t\t\t\tfields.get_field(\"party\").df.reqd = value === \"Payment Entry\";\n\t\t\t\t\tfields.get_field(\"party_type\").df.reqd = value === \"Payment Entry\";\n\t\t\t\t\tfields.get_field(\"journal_entry_type\").df.reqd = value === \"Journal Entry\";\n\t\t\t\t\tfields.get_field(\"second_account\").df.reqd = value === \"Journal Entry\";\n\n\t\t\t\t\tthis.create_field_group.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"details\",\n\t\t\t\tlabel: \"Details\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"reference_number\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: __(\"Reference Number\"),\n\t\t\t\tdefault: (\n\t\t\t\t\tthis.transaction.reference_number\n\t\t\t\t\t||\n\t\t\t\t\tthis.transaction.description ? this.transaction.description.slice(0, 140) : \"\"\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"posting_date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"Posting Date\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: this.transaction.date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"reference_date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"Cheque/Reference Date\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: this.transaction.date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"mode_of_payment\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: __(\"Mode of Payment\"),\n\t\t\t\toptions: \"Mode of Payment\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"edit_in_full_page\",\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tlabel: __(\"Edit in Full Page\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.edit_in_full_page();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"column_break_7\",\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Journal Entry Type\"),\n\t\t\t\tfieldname: \"journal_entry_type\",\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\toptions:\n\t\t\t\t`Bank Entry\\nJournal Entry\\nInter Company Journal Entry\\nCash Entry\\nCredit Card Entry\\nDebit Note\\nCredit Note\\nContra Entry\\nExcise Entry\\nWrite Off Entry\\nOpening Entry\\nDepreciation Entry\\nExchange Rate Revaluation\\nDeferred Revenue\\nDeferred Expense`,\n\t\t\t\tdefault: \"Bank Entry\",\n\t\t\t\tdepends_on: \"eval: doc.document_type == 'Journal Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"second_account\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Account\",\n\t\t\t\toptions: \"Account\",\n\t\t\t\tget_query: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tis_group: 0,\n\t\t\t\t\t\t\tcompany: this.company,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tdepends_on: \"eval: doc.document_type == 'Journal Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"party_type\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Party Type\",\n\t\t\t\toptions: \"DocType\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: party_type,\n\t\t\t\tget_query: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tname: [\n\t\t\t\t\t\t\t\t\"in\",\n\t\t\t\t\t\t\t\tObject.keys(frappe.boot.party_account_types),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet value = this.create_field_group.get_value(\"party_type\");\n\t\t\t\t\tthis.create_field_group.get_field(\"party\").df.options = value;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"party\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Party\",\n\t\t\t\tdefault: this.transaction.party,\n\t\t\t\toptions: party_type,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"project\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Project\",\n\t\t\t\toptions: \"Project\",\n\t\t\t\tdepends_on: \"eval: doc.document_type == 'Payment Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"cost_center\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Cost Center\",\n\t\t\t\toptions: \"Cost Center\",\n\t\t\t\tdepends_on: \"eval: doc.document_type == 'Payment Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Hidden field for alignment\"),\n\t\t\t\tfieldname: \"hidden_field\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\thidden: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Create\"),\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tprimary: true,\n\t\t\t\tclick: () => this.create_voucher(),\n\t\t\t}\n\t\t];\n\t}\n}", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.DetailsTab = class DetailsTab {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.panel_manager.actions_tab = \"details-tab\";\n\n\t\tthis.details_field_group = new frappe.ui.FieldGroup({\n\t\t\tfields: this.get_detail_tab_fields(),\n\t\t\tbody: this.actions_panel.$tab_content,\n\t\t\tcard_layout: true,\n\t\t});\n\t\tthis.details_field_group.make();\n\t}\n\n\tupdate_bank_transaction() {\n\t\tvar me = this;\n\t\tconst reference_number = this.details_field_group.get_value(\"reference_number\");\n\t\tconst party = this.details_field_group.get_value(\"party\");\n\t\tconst party_type = this.details_field_group.get_value(\"party_type\");\n\n\t\tlet diff = [\"reference_number\", \"party\", \"party_type\"].some(field => {\n\t\t\treturn me.details_field_group.get_value(field) !== me.transaction[field];\n\t\t});\n\t\tif (!diff) {\n\t\t\tfrappe.show_alert({message: __(\"No changes to update\"), indicator: \"yellow\"});\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod:\n\t\t\t\t\"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.update_bank_transaction\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: me.transaction.name,\n\t\t\t\treference_number: reference_number,\n\t\t\t\tparty_type: party_type,\n\t\t\t\tparty: party,\n\t\t\t},\n\t\t\tfreeze: true,\n\t\t\tfreeze_message: __(\"Updating ...\"),\n\t\t\tcallback: (response) => {\n\t\t\t\tif (response.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Failed to update {0}\", [me.transaction.name]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update transaction\n\t\t\t\tme.panel_manager.refresh_transaction(\n\t\t\t\t\tnull, reference_number, party_type, party\n\t\t\t\t);\n\n\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t__(\"Bank Transaction {0} updated\", [me.transaction.name])\n\t\t\t\t);\n\t\t\t},\n\t\t});\n\t}\n\n\tget_detail_tab_fields() {\n\t\treturn  [\n\t\t\t{\n\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"Bank Transaction\",\n\t\t\t\tdefault: this.transaction.name,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Date\"),\n\t\t\t\tfieldname: \"date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tdefault: this.transaction.date,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Deposit\"),\n\t\t\t\tfieldname: \"deposit\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tdefault: this.transaction.deposit,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Withdrawal\"),\n\t\t\t\tfieldname: \"withdrawal\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tdefault: this.transaction.withdrawal,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Description\"),\n\t\t\t\tfieldname: \"description\",\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tdefault: this.transaction.description,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"To Allocate\"),\n\t\t\t\tfieldname: \"unallocated_amount\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\toptions: \"account_currency\",\n\t\t\t\tdefault: this.transaction.unallocated_amount,\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Currency\"),\n\t\t\t\tfieldname: \"account_currency\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"Currency\",\n\t\t\t\tread_only: 1,\n\t\t\t\tdefault: this.transaction.currency,\n\t\t\t\thidden: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Account Holder\"),\n\t\t\t\tfieldname: \"account\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tdefault: this.transaction.bank_party_name,\n\t\t\t\tread_only: 1,\n\t\t\t\thidden: this.transaction.bank_party_name ? 0 : 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Party Account Number\"),\n\t\t\t\tfieldname: \"account_number\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tdefault: this.transaction.bank_party_account_number,\n\t\t\t\tread_only: 1,\n\t\t\t\thidden: this.transaction.bank_party_account_number ? 0 : 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Party IBAN\"),\n\t\t\t\tfieldname: \"iban\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tdefault: this.transaction.bank_party_iban,\n\t\t\t\tread_only: 1,\n\t\t\t\thidden: this.transaction.bank_party_iban ? 0 : 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Update\"),\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"update_section\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Reference Number\"),\n\t\t\t\tfieldname: \"reference_number\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tdefault: this.transaction.reference_number,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Party Type\"),\n\t\t\t\tfieldname: \"party_type\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"DocType\",\n\t\t\t\tget_query: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tname: [\n\t\t\t\t\t\t\t\t\"in\", Object.keys(frappe.boot.party_account_types),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet value = this.details_field_group.get_value(\"party_type\");\n\t\t\t\t\tthis.details_field_group.get_field(\"party\").df.options = value;\n\t\t\t\t},\n\t\t\t\tdefault: this.transaction.party_type || null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Party\"),\n\t\t\t\tfieldname: \"party\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tdefault: this.transaction.party,\n\t\t\t\toptions: this.transaction.party_type || null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Hidden field for alignment\"),\n\t\t\t\tfieldname: \"hidden_field\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\thidden: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Submit\"),\n\t\t\t\tfieldname: \"submit_transaction\",\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tprimary: true,\n\t\t\t\tclick: () => this.update_bank_transaction(),\n\t\t\t}\n\t\t];\n\t}\n}", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.MatchTab = class MatchTab {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tasync make() {\n\t\tthis.panel_manager.actions_tab = \"match_voucher-tab\";\n\n\t\tthis.match_field_group = new frappe.ui.FieldGroup({\n\t\t\tfields: this.get_match_tab_fields(),\n\t\t\tbody: this.actions_panel.$tab_content,\n\t\t\tcard_layout: true,\n\t\t});\n\t\tthis.match_field_group.make()\n\n\t\tthis.summary_empty_state();\n\t\tawait this.populate_matching_vouchers();\n\t}\n\n\tsummary_empty_state() {\n\t\tlet summary_field = this.match_field_group.get_field(\"transaction_amount_summary\").$wrapper;\n\t\tsummary_field.append(\n\t\t\t`<div class=\"report-summary reconciliation-summary\" style=\"height: 90px;\">\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tasync populate_matching_vouchers() {\n\t\tlet filter_fields = this.match_field_group.get_values();\n\t\tlet document_types = Object.keys(filter_fields).filter(field => filter_fields[field] === 1);\n\n\t\tthis.update_filters_in_state(document_types);\n\n\t\tlet vouchers = await this.get_matching_vouchers(document_types);\n\t\tthis.render_data_table(vouchers);\n\n\t\tlet transaction_amount = this.transaction.withdrawal || this.transaction.deposit;\n\t\tthis.render_transaction_amount_summary(\n\t\t\tflt(transaction_amount),\n\t\t\tflt(this.transaction.unallocated_amount),\n\t\t\tflt(this.transaction.unallocated_amount),\n\t\t\tthis.transaction.currency,\n\t\t);\n\t}\n\n\tupdate_filters_in_state(document_types) {\n\t\tObject.keys(this.panel_manager.actions_filters).map((key) => {\n\t\t\tlet value = document_types.includes(key) ? 1 : 0;\n\t\t\tthis.panel_manager.actions_filters[key] = value;\n\t\t})\n\t}\n\n\tasync get_matching_vouchers(document_types) {\n\t\tlet vouchers = await frappe.call({\n\t\t\tmethod:\n\t\t\t\t\"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.get_linked_payments\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.transaction.name,\n\t\t\t\tdocument_types: document_types,\n\t\t\t\tfrom_date: this.doc.bank_statement_from_date,\n\t\t\t\tto_date: this.doc.bank_statement_to_date,\n\t\t\t\tfilter_by_reference_date: this.doc.filter_by_reference_date,\n\t\t\t\tfrom_reference_date: this.doc.from_reference_date,\n\t\t\t\tto_reference_date: this.doc.to_reference_date\n\t\t\t},\n\t\t}).then(result => result.message);\n\t\treturn vouchers || [];\n\t}\n\n\trender_data_table(vouchers) {\n\t\tthis.summary_data = {};\n\t\tlet table_data = vouchers.map((row) => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tcontent: row.reference_date || row.posting_date, // Reference Date\n\t\t\t\t\tformat: (value) => {\n\t\t\t\t\t\treturn row.date_match ? value.bold() : value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: row.paid_amount,\n\t\t\t\t\tformat: (value) => {\n\t\t\t\t\t\tlet formatted_value = format_currency(value, row.currency);\n\t\t\t\t\t\tlet match_condition =  row.amount_match || row.unallocated_amount_match;\n\t\t\t\t\t\treturn match_condition ? formatted_value.bold() : formatted_value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: row.reference_no || '',\n\t\t\t\t\tformat: (value) => {\n\t\t\t\t\t\tlet reference_match = row.reference_number_match || row.name_in_desc_match;\n\t\t\t\t\t\treturn reference_match ? value.bold() : value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: row.party,\n\t\t\t\t\tformat: (value) => {\n\t\t\t\t\t\tif (row.party_name) {\n\t\t\t\t\t\t\tfrappe.utils.add_link_title(row.party_type, row.party, row.party_name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet formatted_value =  frappe.format(row.party, {fieldtype: \"Link\", options: row.party_type});\n\t\t\t\t\t\treturn row.party_match ? formatted_value.bold() : formatted_value;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: row.name,\n\t\t\t\t\tformat: (value) => {\n\t\t\t\t\t\treturn frappe.format(row.name, {fieldtype: \"Link\", options: row.doctype});\n\t\t\t\t\t},\n\t\t\t\t\tdoctype: row.doctype,\n\t\t\t\t},\n\t\t\t];\n\t\t});\n\n\t\tconst datatable_options = {\n\t\t\tcolumns: this.get_data_table_columns(),\n\t\t\tdata: table_data,\n\t\t\tdynamicRowHeight: true,\n\t\t\tcheckboxColumn: true,\n\t\t\tinlineFilters: true,\n\t\t\tlayout: \"fluid\",\n\t\t\tserialNoColumn: false,\n\t\t};\n\n\n\t\tthis.actions_table = new frappe.DataTable(\n\t\t\tthis.match_field_group.get_field(\"vouchers\").$wrapper[0],\n\t\t\tdatatable_options\n\t\t);\n\n\t\t// Highlight first row\n\t\tthis.actions_table.style.setStyle(\n\t\t\t\".dt-cell[data-row-index='0']\", {backgroundColor: '#F4FAEE'}\n\t\t);\n\n\t\tthis.bind_row_check_event();\n\t}\n\n\tbind_row_check_event() {\n\t\t// Resistant to row removal on being out of view in datatable\n\t\t$(this.actions_table.bodyScrollable).on(\"click\", \".dt-cell__content input\", (e) => {\n\t\t\tlet idx = $(e.currentTarget).closest(\".dt-cell\").data().rowIndex;\n\t\t\tlet voucher_row = this.actions_table.getRows()[idx];\n\n\t\t\tthis.check_data_table_row(voucher_row)\n\t\t})\n\t}\n\n\tcheck_data_table_row(row) {\n\t\tif (!row) return;\n\n\t\tlet id = row[5].content;  // Voucher name\n\t\tlet value = this.get_amount_from_row(row);\n\n\t\t// If `id` in summary_data, remove it (row was unchecked), else add it\n\t\tif (id in this.summary_data) {\n\t\t\tdelete this.summary_data[id];\n\t\t} else {\n\t\t\tthis.summary_data[id] = value;\n\t\t}\n\n\t\t// Total of selected row amounts in summary_data\n\t\t// Cap total_allocated to unallocated amount\n\t\tlet total_allocated = Object.values(this.summary_data).reduce(\n\t\t\t(a, b) => a + b, 0\n\t\t);\n\t\tlet max_allocated = Math.min(total_allocated, this.transaction.unallocated_amount);\n\n\t\t// Deduct allocated amount from transaction's unallocated amount\n\t\t// to show the final effect on reconciling\n\t\tlet transaction_amount = this.transaction.withdrawal || this.transaction.deposit;\n\t\tlet unallocated = flt(this.transaction.unallocated_amount) - flt(max_allocated);\n\t\tlet actual_unallocated = flt(this.transaction.unallocated_amount) - flt(total_allocated);\n\n\t\tthis.render_transaction_amount_summary(\n\t\t\tflt(transaction_amount), unallocated, actual_unallocated, this.transaction.currency,\n\t\t);\n\t}\n\n\trender_transaction_amount_summary(\n\t\ttotal_amount, unallocated_amount, actual_unallocated, currency\n\t) {\n\t\tlet summary_field = this.match_field_group.get_field(\"transaction_amount_summary\").$wrapper;\n\t\tsummary_field.empty();\n\n\t\t// Show the actual allocated amount\n\t\tlet allocated_amount = flt(total_amount) - flt(unallocated_amount);\n\n\t\tnew erpnext.accounts.bank_reconciliation.SummaryCard({\n\t\t\t$wrapper: summary_field,\n\t\t\tvalues: {\n\t\t\t\t\"Amount\": [total_amount],\n\t\t\t\t\"Allocated Amount\": [allocated_amount, \"\"],\n\t\t\t\t\"To Allocate\": [\n\t\t\t\t\tunallocated_amount,\n\t\t\t\t\t(unallocated_amount < 0 ? \"text-danger\" : unallocated_amount > 0 ? \"text-blue\" : \"text-success\"),\n\t\t\t\t\tactual_unallocated,\n\t\t\t\t]\n\t\t\t},\n\t\t\tcurrency: currency,\n\t\t\twrapper_class: \"reconciliation-summary\"\n\t\t});\n\t}\n\n\treconcile_selected_vouchers() {\n\t\tconst me = this;\n\t\tlet selected_vouchers = [];\n\t\tlet selected_map = this.actions_table.rowmanager.checkMap;\n\t\tlet voucher_rows = this.actions_table.getRows();\n\n\t\tselected_map.forEach((value, idx) => {\n\t\t\tif (value === 1) {\n\t\t\t\tlet row = voucher_rows[idx];\n\t\t\t\tselected_vouchers.push({\n\t\t\t\t\tpayment_doctype: row[5].doctype,\n\t\t\t\t\tpayment_name: row[5].content,  // Voucher name\n\t\t\t\t\tamount: this.get_amount_from_row(row),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (!selected_vouchers.length > 0) {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Please select at least one voucher to reconcile\"),\n\t\t\t\tindicator: \"red\"\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod:\n\t\t\t\t\"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.reconcile_vouchers\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.transaction.name,\n\t\t\t\tvouchers: selected_vouchers,\n\t\t\t},\n\t\t\tfreeze: true,\n\t\t\tfreeze_message: __(\"Reconciling ...\"),\n\t\t\tcallback: (response) => {\n\t\t\t\tif (response.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"Failed to reconcile {0}\", [this.transaction.name]),\n\t\t\t\t\t\tindicator: \"red\"\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tme.actions_panel.after_transaction_reconcile(response.message, false);\n\t\t\t},\n\t\t});\n\t}\n\n\tget_match_tab_fields() {\n\t\tconst filters_state = this.panel_manager.actions_filters;\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Payment Entry\"),\n\t\t\t\tfieldname: \"payment_entry\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.payment_entry,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Journal Entry\"),\n\t\t\t\tfieldname: \"journal_entry\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.journal_entry,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Purchase Invoice\"),\n\t\t\t\tfieldname: \"purchase_invoice\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.purchase_invoice,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Sales Invoice\"),\n\t\t\t\tfieldname: \"sales_invoice\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.sales_invoice,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Loan Repayment\"),\n\t\t\t\tfieldname: \"loan_repayment\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.loan_repayment,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Loan Disbursement\"),\n\t\t\t\tfieldname: \"loan_disbursement\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.loan_disbursement,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Expense Claim\"),\n\t\t\t\tfieldname: \"expense_claim\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.expense_claim,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Bank Transaction\"),\n\t\t\t\tfieldname: \"bank_transaction\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.bank_transaction,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Show Exact Amount\"),\n\t\t\t\tfieldname: \"exact_match\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.exact_match,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Show Exact Party\"),\n\t\t\t\tfieldname: \"exact_party_match\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: this.transaction.party_type && this.transaction.party ? 1 : 0,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t},\n\t\t\t\tread_only: !Boolean(this.transaction.party_type && this.transaction.party)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Unpaid Vouchers\"),\n\t\t\t\tfieldname: \"unpaid_invoices\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tdefault: filters_state.unpaid_invoices,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.populate_matching_vouchers();\n\t\t\t\t},\n\t\t\t\tdepends_on: \"eval: doc.sales_invoice || doc.purchase_invoice || doc.expense_claim\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"transaction_amount_summary\",\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"vouchers\",\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"section_break_reconcile\",\n\t\t\t\thide_border: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Hidden field for alignment\"),\n\t\t\t\tfieldname: \"hidden_field_2\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\thidden: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Reconcile\"),\n\t\t\t\tfieldname: \"bt_reconcile\",\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tprimary: true,\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.reconcile_selected_vouchers();\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\tget_data_table_columns() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: __(\"Date\"),\n\t\t\t\teditable: false,\n\t\t\t\tformat: (value) => {\n\t\t\t\t\treturn frappe.format(value, {fieldtype: \"Date\"});\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Outstanding\"),\n\t\t\t\teditable: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Reference\"),\n\t\t\t\teditable: false,\n\t\t\t\talign: \"left\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Party\"),\n\t\t\t\teditable: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Voucher\"),\n\t\t\t\teditable: false,\n\t\t\t},\n\t\t];\n\t}\n\n\tget_amount_from_row(row) {\n\t\treturn row[2].content;  // Amount\n\t}\n}", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.SummaryCard = class SummaryCard {\n\t/**\n\t * {\n\t * \t$wrapper: $wrapper,\n\t * \tvalues: {\n\t * \t\t\"Amount\": [120, \"text-blue\"],\n\t * \t\t\"Allocated Amount\": [120, \"text-green\", 0],\n\t * \t\t\"To Allocate\": [0, \"text-blue\", -20 (actual unallocated amount)]\n\t * \t},\n\t * \twrapper_class: \"custom-style\",\n\t * \tcurrency: \"USD\"\n\t * }\n\t * case:\n\t * - against total amount 120, we could have 140 allocated via an invoice total\n\t * - naturally 120 out of the invoice total is allocated, so 20 is unallocated\n\t * - in this case, \"To Allocate\" should be 0 (-20), for transparency\n\t*/\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.$wrapper.empty();\n\t\tlet $container = null;\n\n\t\tif (this.$wrapper.find(\".report-summary\").length > 0) {\n\t\t\t$container = this.$wrapper.find(\".report-summary\");\n\t\t\t$container.empty();\n\t\t} else {\n\t\t\t$container = this.$wrapper.append(\n\t\t\t\t`<div class=\"report-summary ${this.wrapper_class || \"\"}\"></div>`\n\t\t\t).find(\".report-summary\");\n\t\t}\n\n\t\tObject.keys(this.values).map((key) => {\n\t\t\tlet values = this.values[key];\n\t\t\tif (values[2] && values[2] !== values[0]) {\n\t\t\t\t// handle the case where we have two values to show\n\t\t\t\tlet df = {fieldtype: \"Currency\", options: \"currency\"};\n\t\t\t\tlet value_1 = frappe.format(\n\t\t\t\t\tvalues[0], df, { only_value: true }, { currency: this.currency }\n\t\t\t\t);\n\t\t\t\tlet value_2 = frappe.format(\n\t\t\t\t\tvalues[2], df, { only_value: true }, { currency: this.currency }\n\t\t\t\t);\n\t\t\t\tlet visible_value = `${value_1} (${value_2})`;\n\t\t\t\tvar number_card = $(\n\t\t\t\t\t`<div class=\"summary-item\">\n\t\t\t\t\t\t<div class=\"summary-label\">${__(key)}</div>\n\t\t\t\t\t\t<div class=\"summary-value\">${visible_value}</div>\n\t\t\t\t\t</div>`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlet data = {\n\t\t\t\t\tvalue: values[0],\n\t\t\t\t\tlabel: __(key),\n\t\t\t\t\tdatatype: \"Currency\",\n\t\t\t\t\tcurrency: this.currency,\n\t\t\t\t};\n\t\t\t\tvar number_card = frappe.utils.build_summary_item(data);\n\t\t\t}\n\n\t\t\t$container.append(number_card);\n\t\t\tif (values.length > 1) {\n\t\t\t\tlet $text = number_card.find(\".summary-value\");\n\t\t\t\t$text.addClass(values[1]);\n\t\t\t}\n\t\t});\n\t}\n}"],
  "mappings": "mbAAA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,aAAe,KAAmB,CACtE,YAAYA,EAAM,CACjB,OAAO,OAAO,KAAMA,CAAI,EACxB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,KAAK,YAAY,CAClB,CAEA,MAAM,aAAc,CACnB,KAAK,aAAe,MAAM,KAAK,sBAAsB,EAErD,KAAK,SAAS,MAAM,EACpB,KAAK,eAAiB,KAAK,SAAS,OAAO;AAAA;AAAA,GAE1C,EAAE,KAAK,kBAAkB,EAE1B,KAAK,cAAc,CACpB,CAEA,MAAM,uBAAwB,CAa7B,OAZmB,MAAM,OAAO,KAAK,CACpC,OACC,sHACD,KAAM,CACL,aAAc,KAAK,IAAI,aACvB,UAAW,KAAK,IAAI,yBACpB,QAAS,KAAK,IAAI,uBAClB,SAAU,KAAK,OAAS,UACzB,EACA,OAAQ,GACR,eAAgB,GAAG,4BAA4B,CAChD,CAAC,EAAE,KAAKC,GAAYA,EAAS,OAAO,CAErC,CAEA,eAAgB,CAGf,GAFA,KAAK,iCAAiC,EAElC,CAAC,KAAK,cAAgB,CAAC,KAAK,aAAa,OAC5C,KAAK,uBAAuB,MACtB,CACN,KAAK,kBAAkB,EAEvB,IAAIC,EAAoB,KAAK,aAAa,GAC1C,KAAK,gBAAgB,KAAK,IAAMA,EAAkB,IAAI,EAAE,MAAM,CAC/D,CACD,CAEA,kCAAmC,CAElC,KAAK,YAAc,oBACnB,KAAK,gBAAkB,CACtB,cAAe,EACf,cAAe,EACf,iBAAkB,EAClB,cAAe,EACf,eAAgB,EAChB,kBAAmB,EACnB,cAAe,EACf,iBAAkB,EAClB,YAAa,EACb,kBAAmB,EACnB,gBAAiB,CAClB,CACD,CAEA,wBAAyB,CACxB,KAAK,eAAe,MAAM,EAC1B,KAAK,eAAe,OAAO;AAAA;AAAA;AAAA,SAGpB,GAAG,gDAAgD;AAAA;AAAA,GAEzD,CACF,CAEA,mBAAoB,CACnB,KAAK,eAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,GAK1B,EAED,KAAK,iBAAiB,EACtB,KAAK,yBAAyB,CAC/B,CAEA,sBAAuB,CACtB,KAAK,cAAiB,IAAI,QAAQ,SAAS,oBAAoB,oBAAoB,CAClF,SAAU,KAAK,eACf,YAAa,KAAK,mBAClB,IAAK,KAAK,IACV,cAAe,IAChB,CAAC,CACF,CAEA,kBAAmB,CAClB,KAAK,WAAa,KAAK,eAAe,KAAK,UAAU,EACrD,KAAK,WAAW,OAAO;AAAA,iCACQ,GAAG,SAAS;AAAA;AAAA,GAE1C,EAED,IAAIC,EAAK,KACT,IAAI,OAAO,GAAG,aAAa,CAC1B,OAAQA,EAAG,WAAW,KAAK,mBAAmB,EAC9C,KAAM,CACL,QAASA,EAAG,UAAY,OACxB,WAAYA,EAAG,iBAAmB,MAClC,QAAS,CACR,CAAC,UAAW,OAAQ,MAAO,GAAG,MAAM,CAAC,EACrC,CAAC,UAAW,aAAc,MAAO,GAAG,YAAY,CAAC,EACjD,CAAC,UAAW,UAAW,MAAO,GAAG,SAAS,CAAC,EAC3C,CAAC,UAAW,qBAAsB,MAAO,GAAG,oBAAoB,CAAC,CAClE,CACD,EACA,OAAQ,SAASC,EAASC,EAAY,CAErCF,EAAG,SAAYC,GAAWD,EAAG,UAAY,OACzCA,EAAG,gBAAmBE,GAAcF,EAAG,iBAAmB,MAC1DA,EAAG,MAASA,EAAG,SAAW,IAAMA,EAAG,gBAGnCA,EAAG,YAAY,CAChB,CACD,CAAC,CACF,CAEA,0BAA2B,CAC1B,KAAK,gBAAkB,KAAK,eAAe,KAAK,iBAAiB,EAEjE,KAAK,aAAa,IAAIG,GAAe,CACpC,IAAIC,EAASD,EAAY,SAAWA,EAAY,WAC5CE,EAASF,EAAY,WAAa,IAAM,IAExCG,EAAO,KAAK,gBAAgB,OAAO;AAAA,eAC3BH,EAAY;AAAA;AAAA;AAAA;AAAA,sBAIL,GAAG,MAAM,MAAM,OAAO,OAAOA,EAAY,KAAM,CAAC,UAAW,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKvE,GAAG,QAAQ;AAAA,2BACDA,EAAY,WAAa,cAAgB;AAAA;AAAA,aAEvDE,KAAU,gBAAgBD,EAAQD,EAAY,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAQpD,GAAG,gBAAgB;AAAA,8BACJA,EAAY,gBAAkB,GAAK;AAAA;AAAA,2CAEtBA,EAAY;AAAA;AAAA;AAAA;AAAA,eAIxC,GAAG,aAAa;AAAA,2BACJA,EAAY,YAAc,GAAK;AAAA;AAAA,wCAElBA,EAAY;AAAA;AAAA;AAAA;AAAA,eAIrC,GAAG,WAAW;AAAA,yBACJA,EAAY,iBAAmB,GAAK;AAAA;AAAA,sCAEvBA,EAAY;AAAA;AAAA;AAAA,IAG9C,EAAE,KAAK,IAAMA,EAAY,IAAI,EAE9BG,EAAK,GAAG,QAAS,IAAM,CACtBA,EAAK,SAAS,QAAQ,EAAE,SAAS,EAAE,YAAY,QAAQ,EAGvD,KAAK,mBAAqB,KAAK,aAAa,KAAK,CAAC,CAAC,KAAAC,CAAI,IAAMA,IAASJ,EAAY,IAAI,EACtF,KAAK,qBAAqB,CAC3B,CAAC,CACF,CAAC,CACF,CAEA,oBAAoBK,EAAe,KAAMC,EAAiB,KAAMC,EAAW,KAAMC,EAAM,KAAM,CAE5F,IAAIC,EAAK,KAAK,mBAAmB,KAC7BC,EAAgB,KAAK,aAAa,UAAU,CAAC,CAAC,KAAAN,CAAI,IAAMA,IAASK,CAAE,EAEnEE,EAAuB,KAAK,gBAAgB,KAAK,IAAMF,CAAE,EACzDT,EAAc,KAAK,aAAaU,GAEhCL,EAEH,KAAK,aAAaK,GAAe,mBAAwBL,GAEzD,KAAK,aAAaK,GAAiBE,EAAAC,EAAA,GAC/Bb,GAD+B,CAElC,iBAAkBM,EAClB,WAAYC,EACZ,MAAOC,CACR,GAEAG,EAAqB,KAAK,YAAY,EAAE,YAAY,MAAM,EAC1DA,EAAqB,KAAK,kBAAkB,EAAE,KAAKL,GAAoB,IAAI,GAG5EK,EAAqB,MAAM,CAC5B,CAEA,0BAA2B,CAE1B,IAAIF,EAAK,KAAK,mBAAmB,KAC7BE,EAAuB,KAAK,gBAAgB,KAAK,IAAMF,CAAE,EACzDC,EAAgB,KAAK,aAAa,UAAU,CAAC,CAAC,KAAAN,CAAI,IAAMA,IAASK,CAAE,EAEnEK,EAAmB,KAAK,aAAaJ,EAAgB,GACrDK,EAAuB,KAAK,aAAaL,EAAgB,GAEzDI,GACH,KAAK,mBAAqBA,EACFH,EAAqB,KAAK,EAChC,MAAM,GACdI,IACV,KAAK,mBAAqBA,EACEJ,EAAqB,KAAK,EAChC,MAAM,GAG7B,KAAK,aAAa,OAAOD,EAAe,CAAC,EACzCC,EAAqB,OAAO,EAExB,CAACG,GAAoB,CAACC,IACzB,KAAK,mBAAqB,KAC1B,KAAK,uBAAuB,EAG9B,CACD,ECvPA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,oBAAsB,KAA0B,CACpF,YAAYC,EAAM,CACjB,OAAO,OAAO,KAAMA,CAAI,EACxB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,KAAK,uBAAuB,EAC5B,KAAK,YAAY,EAGjB,KAAK,mBAAmB,KAAK,IAAM,KAAK,cAAc,WAAW,EAAE,QAAQ,OAAO,CACnF,CAEA,wBAAyB,CACpB,KAAK,SAAS,KAAK,gBAAgB,EAAE,OAAS,GACjD,KAAK,mBAAqB,KAAK,SAAS,KAAK,gBAAgB,EAC7D,KAAK,mBAAmB,MAAM,GAE9B,KAAK,mBAAqB,KAAK,SAAS,OAAO;AAAA;AAAA,IAE9C,EAAE,KAAK,gBAAgB,EAGzB,KAAK,mBAAmB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAO9B,CACF,CAEA,aAAc,CACb,KAAK,aAAe,KAAK,mBAAmB,KAAK,YAAY,EAC7D,KAAK,aAAe,KAAK,mBAAmB,KAAK,cAAc,EAG/D,OAAO,SAAS,IAAI,YAAY,EAEhC,CAAC,UAAW,gBAAiB,gBAAgB,EAAE,QAAQC,GAAO,CAC7D,IAAIC,EAAW,OAAO,MAAMD,CAAG,EAC/B,KAAK,QAAQC,EAAUD,CAAG,EAEV,KAAK,aAAa,KAAK,IAAIC,OAAc,EAC/C,GAAG,QAAS,IAAM,CAC3B,KAAK,aAAa,MAAM,EAEpBD,GAAO,UACV,IAAI,QAAQ,SAAS,oBAAoB,WAAW,CACnD,cAAe,KACf,YAAa,KAAK,YAClB,cAAe,KAAK,aACrB,CAAC,EACSA,GAAO,gBACjB,IAAI,QAAQ,SAAS,oBAAoB,SAAS,CACjD,cAAe,KACf,YAAa,KAAK,YAClB,cAAe,KAAK,cACpB,IAAK,KAAK,GACX,CAAC,EAED,IAAI,QAAQ,SAAS,oBAAoB,UAAU,CAClD,cAAe,KACf,YAAa,KAAK,YAClB,cAAe,KAAK,cACpB,QAAS,KAAK,IAAI,OACnB,CAAC,CAEH,CAAC,CACF,CAAC,CACF,CAEA,QAAQC,EAAUD,EAAK,CACtB,KAAK,aAAa,OAAO;AAAA;AAAA;AAAA,WAGhBC;AAAA,0CAC+BD;AAAA;AAAA,OAEnC,GAAGA,CAAG;AAAA;AAAA;AAAA,GAGV,CACF,CAEA,4BAA4BE,EAASC,EAAiB,GAAOC,EAAe,CAG3E,IAAIC,EAAMH,EACNI,EAAqB,IAAID,EAAI,kBAAkB,EACnD,GAAIC,EAAqB,EAExB,OAAO,WAAW,CACjB,QAAS,GACR,qCACA,CAAC,KAAK,YAAY,KAAMH,EAAmB,aAAe,SAAS,CACpE,EACA,UAAW,MACZ,CAAC,EACD,KAAK,cAAc,oBAAoBG,CAAkB,MACnD,CACN,IAAIC,EAAe,GAAG,+BAAgC,CAAC,KAAK,YAAY,IAAI,CAAC,EACzEJ,IACHI,EAAe,GAAG,iDAAkD,CAAC,KAAK,YAAY,KAAMH,CAAa,CAAC,GAE3G,OAAO,WAAW,CAAC,QAASG,EAAc,UAAW,OAAO,CAAC,EAC7D,KAAK,cAAc,yBAAyB,CAC7C,CACD,CACD,ECjHA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,UAAY,KAAgB,CAChE,YAAYC,EAAM,CACjB,OAAO,OAAO,KAAMA,CAAI,EACxB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,KAAK,cAAc,YAAc,qBAEjC,KAAK,mBAAqB,IAAI,OAAO,GAAG,WAAW,CAClD,OAAQ,KAAK,sBAAsB,EACnC,KAAM,KAAK,cAAc,aACzB,YAAa,EACd,CAAC,EACD,KAAK,mBAAmB,KAAK,CAC9B,CAEA,gBAAiB,CAChB,IAAIC,EAAK,KAET,IAAIC,EADS,KAAK,mBAAmB,WAAW,EACrB,cAG3B,KAAK,mBACJ,GACCC,GAAYF,EAAG,cAAc,4BAC7BE,EAAS,GAAMD,CAChB,CACD,CACD,CAEA,mBAAoB,CACnB,KAAK,mBAAmB,GAAOC,GAAY,CAC1C,IAAMC,EAAM,OAAO,MAAM,KAAKD,CAAO,EACjCE,EAAUD,EAAI,GAAG,QAASE,EAAUF,EAAI,GAAG,KAI/C,OAAO,SAAS,cAAcC,EAASC,CAAO,EAC9C,OAAO,SAAS,IAAI,YAAY,EAChC,OAAO,SAAS,GAAG,aAAeC,GAAS,CACtCA,EAAK,UAAYF,GAAWE,EAAK,OAASD,GAC7C,KAAK,sBAAsBD,EAASC,CAAO,CAE7C,CAAC,EAED,OAAO,gBAAkB,GACzB,OAAO,UAAU,OAAQD,EAASC,CAAO,CAC1C,CAAC,CACF,CAEA,mBAAmBE,EAAW,GAAOC,EAAkB,CAEtD,IAAIC,EAAS,KAAK,mBAAmB,WAAW,EAC5CR,EAAgBQ,EAAO,cACvBC,EAAS,gGACTC,EAAO,CACV,sBAAuB,KAAK,YAAY,KACxC,iBAAkBF,EAAO,iBACzB,eAAgBA,EAAO,eACvB,WAAYA,EAAO,WACnB,MAAOA,EAAO,MACd,aAAcA,EAAO,aACrB,gBAAiBA,EAAO,gBACxB,WAAYF,CACb,EAEIN,IAAkB,iBACrBS,EAASA,EAAS,4BAClBC,EAAOC,EAAAC,EAAA,GACHF,GADG,CAEN,QAASF,EAAO,QAChB,YAAaA,EAAO,WACrB,KAEAC,EAAUA,EAAS,4BACnBC,EAAOC,EAAAC,EAAA,GACHF,GADG,CAEN,WAAYF,EAAO,mBACnB,eAAgBA,EAAO,cACxB,IAGD,OAAO,KAAK,CACX,OAAQC,EACR,KAAMC,EACN,SAAWG,GAAa,CACvB,GAAIA,EAAS,IAAK,CACjB,OAAO,WAAW,CACjB,QAAS,GAAG,mCAAoC,CAACb,EAAe,KAAK,YAAY,IAAI,CAAC,EACtF,UAAW,KACZ,CAAC,EACD,MACD,MAAWa,EAAS,SACnBN,EAAiBM,EAAS,OAAO,CAEnC,CACD,CAAC,CAEF,CAEA,sBAAsBV,EAASC,EAAS,CAIvC,IAAIL,EAAK,KACT,OAAO,KAAK,CACX,OAAQ,kHACR,KAAM,CACL,iBAAkB,KAAK,YAAY,KACnC,OAAQ,KAAK,YAAY,mBACzB,aAAcI,EACd,aAAcC,CACf,EACA,SAAWS,GAAa,CACvB,GAAIA,EAAS,IAAK,CACjB,OAAO,WAAW,CACjB,QAAS,GAAG,0CAA2C,CAACV,EAASJ,EAAG,YAAY,IAAI,CAAC,EACrF,UAAW,KACZ,CAAC,EACD,MACD,SAAWc,EAAS,SAAW,OAAO,KAAKA,EAAS,OAAO,EAAE,OAAS,EAAG,CACxE,GAAIA,EAAS,QAAQ,QAAS,CAC7B,OAAO,SAAS,IAAI,YAAY,EAChC,MACD,CAEAd,EAAG,cAAc,4BAChBc,EAAS,QAAS,GAAMV,CACzB,CACD,CACD,CACD,CAAC,CACF,CAGA,uBAAwB,CACvB,IAAIW,EAAa,KAAK,YAAY,aAAe,IAAI,KAAK,YAAY,UAAU,EAAI,EAAI,WAAa,YACrG,MAAO,CACN,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,gBACX,UAAW,SACX,QAAS;AAAA,eACT,QAAS,gBACT,SAAU,IAAM,CACf,IAAIC,EAAQ,KAAK,mBAAmB,UAAU,eAAe,EACzDC,EAAS,KAAK,mBAElBA,EAAO,UAAU,OAAO,EAAE,GAAG,KAAOD,IAAU,gBAC9CC,EAAO,UAAU,YAAY,EAAE,GAAG,KAAOD,IAAU,gBACnDC,EAAO,UAAU,oBAAoB,EAAE,GAAG,KAAOD,IAAU,gBAC3DC,EAAO,UAAU,gBAAgB,EAAE,GAAG,KAAOD,IAAU,gBAEvD,KAAK,mBAAmB,QAAQ,CACjC,CACD,EACA,CACC,UAAW,gBACX,UAAW,UACX,MAAO,SACR,EACA,CACC,UAAW,mBACX,UAAW,OACX,MAAO,GAAG,kBAAkB,EAC5B,QACC,KAAK,YAAY,kBAEjB,KAAK,YAAY,YAAc,KAAK,YAAY,YAAY,MAAM,EAAG,GAAG,EAAI,EAE9E,EACA,CACC,UAAW,eACX,UAAW,OACX,MAAO,GAAG,cAAc,EACxB,KAAM,EACN,QAAS,KAAK,YAAY,IAC3B,EACA,CACC,UAAW,iBACX,UAAW,OACX,MAAO,GAAG,uBAAuB,EACjC,KAAM,EACN,QAAS,KAAK,YAAY,IAC3B,EACA,CACC,UAAW,kBACX,UAAW,OACX,MAAO,GAAG,iBAAiB,EAC3B,QAAS,iBACV,EACA,CACC,UAAW,oBACX,UAAW,SACX,MAAO,GAAG,mBAAmB,EAC7B,MAAO,IAAM,CACZ,KAAK,kBAAkB,CACxB,CACD,EACA,CACC,UAAW,iBACX,UAAW,cACZ,EACA,CACC,MAAO,GAAG,oBAAoB,EAC9B,UAAW,qBACX,UAAW,SACX,QACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,QAAS,aACT,WAAY,4CACb,EACA,CACC,UAAW,iBACX,UAAW,OACX,MAAO,UACP,QAAS,UACT,UAAW,KACH,CACN,QAAS,CACR,SAAU,EACV,QAAS,KAAK,OACf,CACD,GAED,WAAY,4CACb,EACA,CACC,UAAW,aACX,UAAW,OACX,MAAO,aACP,QAAS,UACT,KAAM,EACN,QAASD,EACT,UAAW,UAAY,CACtB,MAAO,CACN,QAAS,CACR,KAAM,CACL,KACA,OAAO,KAAK,OAAO,KAAK,mBAAmB,CAC5C,CACD,CACD,CACD,EACA,SAAU,IAAM,CACf,IAAIC,EAAQ,KAAK,mBAAmB,UAAU,YAAY,EAC1D,KAAK,mBAAmB,UAAU,OAAO,EAAE,GAAG,QAAUA,CACzD,CACD,EACA,CACC,UAAW,QACX,UAAW,OACX,MAAO,QACP,QAAS,KAAK,YAAY,MAC1B,QAASD,EACT,KAAM,CACP,EACA,CACC,UAAW,UACX,UAAW,OACX,MAAO,UACP,QAAS,UACT,WAAY,4CACb,EACA,CACC,UAAW,cACX,UAAW,OACX,MAAO,cACP,QAAS,cACT,WAAY,4CACb,EACA,CACC,UAAW,eACZ,EACA,CACC,MAAO,GAAG,4BAA4B,EACtC,UAAW,eACX,UAAW,OACX,OAAQ,CACT,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,QAAQ,EAClB,UAAW,SACX,QAAS,GACT,MAAO,IAAM,KAAK,eAAe,CAClC,CACD,CACD,CACD,ECtSA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,WAAa,KAAiB,CAClE,YAAYG,EAAM,CACjB,EAAE,OAAO,KAAMA,CAAI,EACnB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,KAAK,cAAc,YAAc,cAEjC,KAAK,oBAAsB,IAAI,OAAO,GAAG,WAAW,CACnD,OAAQ,KAAK,sBAAsB,EACnC,KAAM,KAAK,cAAc,aACzB,YAAa,EACd,CAAC,EACD,KAAK,oBAAoB,KAAK,CAC/B,CAEA,yBAA0B,CACzB,IAAIC,EAAK,KACT,IAAMC,EAAmB,KAAK,oBAAoB,UAAU,kBAAkB,EACxEC,EAAQ,KAAK,oBAAoB,UAAU,OAAO,EAClDC,EAAa,KAAK,oBAAoB,UAAU,YAAY,EAKlE,GAAI,CAHO,CAAC,mBAAoB,QAAS,YAAY,EAAE,KAAKC,GACpDJ,EAAG,oBAAoB,UAAUI,CAAK,IAAMJ,EAAG,YAAYI,EAClE,EACU,CACV,OAAO,WAAW,CAAC,QAAS,GAAG,sBAAsB,EAAG,UAAW,QAAQ,CAAC,EAC5E,MACD,CAEA,OAAO,KAAK,CACX,OACC,qGACD,KAAM,CACL,sBAAuBJ,EAAG,YAAY,KACtC,iBAAkBC,EAClB,WAAYE,EACZ,MAAOD,CACR,EACA,OAAQ,GACR,eAAgB,GAAG,cAAc,EACjC,SAAWG,GAAa,CACvB,GAAIA,EAAS,IAAK,CACjB,OAAO,WAAW,GAAG,uBAAwB,CAACL,EAAG,YAAY,IAAI,CAAC,CAAC,EACnE,MACD,CAGAA,EAAG,cAAc,oBAChB,KAAMC,EAAkBE,EAAYD,CACrC,EAEA,OAAO,WACN,GAAG,+BAAgC,CAACF,EAAG,YAAY,IAAI,CAAC,CACzD,CACD,CACD,CAAC,CACF,CAEA,uBAAwB,CACvB,MAAQ,CACP,CACC,MAAO,GAAG,IAAI,EACd,UAAW,OACX,UAAW,OACX,QAAS,mBACT,QAAS,KAAK,YAAY,KAC1B,UAAW,CACZ,EACA,CACC,MAAO,GAAG,MAAM,EAChB,UAAW,OACX,UAAW,OACX,QAAS,KAAK,YAAY,KAC1B,UAAW,CACZ,EACA,CACC,MAAO,GAAG,SAAS,EACnB,UAAW,UACX,UAAW,WACX,QAAS,KAAK,YAAY,QAC1B,UAAW,CACZ,EACA,CACC,MAAO,GAAG,YAAY,EACtB,UAAW,aACX,UAAW,WACX,QAAS,KAAK,YAAY,WAC1B,UAAW,CACZ,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,aAAa,EACvB,UAAW,cACX,UAAW,aACX,QAAS,KAAK,YAAY,YAC1B,UAAW,CACZ,EACA,CACC,MAAO,GAAG,aAAa,EACvB,UAAW,qBACX,UAAW,WACX,QAAS,mBACT,QAAS,KAAK,YAAY,mBAC1B,UAAW,CACZ,EACA,CACC,MAAO,GAAG,UAAU,EACpB,UAAW,mBACX,UAAW,OACX,QAAS,WACT,UAAW,EACX,QAAS,KAAK,YAAY,SAC1B,OAAQ,CACT,EACA,CACC,MAAO,GAAG,gBAAgB,EAC1B,UAAW,UACX,UAAW,OACX,QAAS,KAAK,YAAY,gBAC1B,UAAW,EACX,OAAQ,KAAK,YAAY,gBAAkB,EAAI,CAChD,EACA,CACC,MAAO,GAAG,sBAAsB,EAChC,UAAW,iBACX,UAAW,OACX,QAAS,KAAK,YAAY,0BAC1B,UAAW,EACX,OAAQ,KAAK,YAAY,0BAA4B,EAAI,CAC1D,EACA,CACC,MAAO,GAAG,YAAY,EACtB,UAAW,OACX,UAAW,OACX,QAAS,KAAK,YAAY,gBAC1B,UAAW,EACX,OAAQ,KAAK,YAAY,gBAAkB,EAAI,CAChD,EACA,CACC,MAAO,GAAG,QAAQ,EAClB,UAAW,gBACX,UAAW,gBACZ,EACA,CACC,MAAO,GAAG,kBAAkB,EAC5B,UAAW,mBACX,UAAW,OACX,QAAS,KAAK,YAAY,gBAC3B,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,YAAY,EACtB,UAAW,aACX,UAAW,OACX,QAAS,UACT,UAAW,UAAY,CACtB,MAAO,CACN,QAAS,CACR,KAAM,CACL,KAAM,OAAO,KAAK,OAAO,KAAK,mBAAmB,CAClD,CACD,CACD,CACD,EACA,SAAU,IAAM,CACf,IAAIM,EAAQ,KAAK,oBAAoB,UAAU,YAAY,EAC3D,KAAK,oBAAoB,UAAU,OAAO,EAAE,GAAG,QAAUA,CAC1D,EACA,QAAS,KAAK,YAAY,YAAc,IACzC,EACA,CACC,MAAO,GAAG,OAAO,EACjB,UAAW,QACX,UAAW,OACX,QAAS,KAAK,YAAY,MAC1B,QAAS,KAAK,YAAY,YAAc,IACzC,EACA,CACC,UAAW,eACZ,EACA,CACC,MAAO,GAAG,4BAA4B,EACtC,UAAW,eACX,UAAW,OACX,OAAQ,CACT,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,QAAQ,EAClB,UAAW,qBACX,UAAW,SACX,QAAS,GACT,MAAO,IAAM,KAAK,wBAAwB,CAC3C,CACD,CACD,CACD,EC9MA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,SAAW,KAAe,CAC9D,YAAYC,EAAM,CACjB,EAAE,OAAO,KAAMA,CAAI,EACnB,KAAK,KAAK,CACX,CAEA,MAAM,MAAO,CACZ,KAAK,cAAc,YAAc,oBAEjC,KAAK,kBAAoB,IAAI,OAAO,GAAG,WAAW,CACjD,OAAQ,KAAK,qBAAqB,EAClC,KAAM,KAAK,cAAc,aACzB,YAAa,EACd,CAAC,EACD,KAAK,kBAAkB,KAAK,EAE5B,KAAK,oBAAoB,EACzB,MAAM,KAAK,2BAA2B,CACvC,CAEA,qBAAsB,CACD,KAAK,kBAAkB,UAAU,4BAA4B,EAAE,SACrE,OACb;AAAA,UAED,CACD,CAEA,MAAM,4BAA6B,CAClC,IAAIC,EAAgB,KAAK,kBAAkB,WAAW,EAClDC,EAAiB,OAAO,KAAKD,CAAa,EAAE,OAAOE,GAASF,EAAcE,KAAW,CAAC,EAE1F,KAAK,wBAAwBD,CAAc,EAE3C,IAAIE,EAAW,MAAM,KAAK,sBAAsBF,CAAc,EAC9D,KAAK,kBAAkBE,CAAQ,EAE/B,IAAIC,EAAqB,KAAK,YAAY,YAAc,KAAK,YAAY,QACzE,KAAK,kCACJ,IAAIA,CAAkB,EACtB,IAAI,KAAK,YAAY,kBAAkB,EACvC,IAAI,KAAK,YAAY,kBAAkB,EACvC,KAAK,YAAY,QAClB,CACD,CAEA,wBAAwBH,EAAgB,CACvC,OAAO,KAAK,KAAK,cAAc,eAAe,EAAE,IAAKI,GAAQ,CAC5D,IAAIC,EAAQL,EAAe,SAASI,CAAG,EAAI,EAAI,EAC/C,KAAK,cAAc,gBAAgBA,GAAOC,CAC3C,CAAC,CACF,CAEA,MAAM,sBAAsBL,EAAgB,CAc3C,OAbe,MAAM,OAAO,KAAK,CAChC,OACC,oHACD,KAAM,CACL,sBAAuB,KAAK,YAAY,KACxC,eAAgBA,EAChB,UAAW,KAAK,IAAI,yBACpB,QAAS,KAAK,IAAI,uBAClB,yBAA0B,KAAK,IAAI,yBACnC,oBAAqB,KAAK,IAAI,oBAC9B,kBAAmB,KAAK,IAAI,iBAC7B,CACD,CAAC,EAAE,KAAKM,GAAUA,EAAO,OAAO,GACb,CAAC,CACrB,CAEA,kBAAkBJ,EAAU,CAC3B,KAAK,aAAe,CAAC,EACrB,IAAIK,EAAaL,EAAS,IAAKM,GACvB,CACN,CACC,QAASA,EAAI,gBAAkBA,EAAI,aACnC,OAASH,GACDG,EAAI,WAAaH,EAAM,KAAK,EAAIA,CAEzC,EACA,CACC,QAASG,EAAI,YACb,OAASH,GAAU,CAClB,IAAII,EAAkB,gBAAgBJ,EAAOG,EAAI,QAAQ,EAEzD,OADuBA,EAAI,cAAgBA,EAAI,yBACtBC,EAAgB,KAAK,EAAIA,CACnD,CACD,EACA,CACC,QAASD,EAAI,cAAgB,GAC7B,OAASH,GACcG,EAAI,wBAA0BA,EAAI,mBAC/BH,EAAM,KAAK,EAAIA,CAE1C,EACA,CACC,QAASG,EAAI,MACb,OAASH,GAAU,CACdG,EAAI,YACP,OAAO,MAAM,eAAeA,EAAI,WAAYA,EAAI,MAAOA,EAAI,UAAU,EAEtE,IAAIC,EAAmB,OAAO,OAAOD,EAAI,MAAO,CAAC,UAAW,OAAQ,QAASA,EAAI,UAAU,CAAC,EAC5F,OAAOA,EAAI,YAAcC,EAAgB,KAAK,EAAIA,CACnD,CACD,EACA,CACC,QAASD,EAAI,KACb,OAASH,GACD,OAAO,OAAOG,EAAI,KAAM,CAAC,UAAW,OAAQ,QAASA,EAAI,OAAO,CAAC,EAEzE,QAASA,EAAI,OACd,CACD,CACA,EAEKE,EAAoB,CACzB,QAAS,KAAK,uBAAuB,EACrC,KAAMH,EACN,iBAAkB,GAClB,eAAgB,GAChB,cAAe,GACf,OAAQ,QACR,eAAgB,EACjB,EAGA,KAAK,cAAgB,IAAI,OAAO,UAC/B,KAAK,kBAAkB,UAAU,UAAU,EAAE,SAAS,GACtDG,CACD,EAGA,KAAK,cAAc,MAAM,SACxB,+BAAgC,CAAC,gBAAiB,SAAS,CAC5D,EAEA,KAAK,qBAAqB,CAC3B,CAEA,sBAAuB,CAEtB,EAAE,KAAK,cAAc,cAAc,EAAE,GAAG,QAAS,0BAA4B,GAAM,CAClF,IAAIC,EAAM,EAAE,EAAE,aAAa,EAAE,QAAQ,UAAU,EAAE,KAAK,EAAE,SACpDC,EAAc,KAAK,cAAc,QAAQ,EAAED,GAE/C,KAAK,qBAAqBC,CAAW,CACtC,CAAC,CACF,CAEA,qBAAqBJ,EAAK,CACzB,GAAI,CAACA,EAAK,OAEV,IAAIK,EAAKL,EAAI,GAAG,QACZH,EAAQ,KAAK,oBAAoBG,CAAG,EAGpCK,KAAM,KAAK,aACd,OAAO,KAAK,aAAaA,GAEzB,KAAK,aAAaA,GAAMR,EAKzB,IAAIS,EAAkB,OAAO,OAAO,KAAK,YAAY,EAAE,OACtD,CAACC,EAAGC,IAAMD,EAAIC,EAAG,CAClB,EACIC,EAAgB,KAAK,IAAIH,EAAiB,KAAK,YAAY,kBAAkB,EAI7EX,EAAqB,KAAK,YAAY,YAAc,KAAK,YAAY,QACrEe,EAAc,IAAI,KAAK,YAAY,kBAAkB,EAAI,IAAID,CAAa,EAC1EE,EAAqB,IAAI,KAAK,YAAY,kBAAkB,EAAI,IAAIL,CAAe,EAEvF,KAAK,kCACJ,IAAIX,CAAkB,EAAGe,EAAaC,EAAoB,KAAK,YAAY,QAC5E,CACD,CAEA,kCACCC,EAAcC,EAAoBF,EAAoBG,EACrD,CACD,IAAIC,EAAgB,KAAK,kBAAkB,UAAU,4BAA4B,EAAE,SACnFA,EAAc,MAAM,EAGpB,IAAIC,EAAmB,IAAIJ,CAAY,EAAI,IAAIC,CAAkB,EAEjE,IAAI,QAAQ,SAAS,oBAAoB,YAAY,CACpD,SAAUE,EACV,OAAQ,CACP,OAAU,CAACH,CAAY,EACvB,mBAAoB,CAACI,EAAkB,EAAE,EACzC,cAAe,CACdH,EACCA,EAAqB,EAAI,cAAgBA,EAAqB,EAAI,YAAc,eACjFF,CACD,CACD,EACA,SAAUG,EACV,cAAe,wBAChB,CAAC,CACF,CAEA,6BAA8B,CAC7B,IAAMG,EAAK,KACPC,EAAoB,CAAC,EACrBC,EAAe,KAAK,cAAc,WAAW,SAC7CC,EAAe,KAAK,cAAc,QAAQ,EAa9C,GAXAD,EAAa,QAAQ,CAACtB,EAAOM,IAAQ,CACpC,GAAIN,IAAU,EAAG,CAChB,IAAIG,EAAMoB,EAAajB,GACvBe,EAAkB,KAAK,CACtB,gBAAiBlB,EAAI,GAAG,QACxB,aAAcA,EAAI,GAAG,QACrB,OAAQ,KAAK,oBAAoBA,CAAG,CACrC,CAAC,CACF,CACD,CAAC,EAEG,CAACkB,EAAkB,OAAS,EAAG,CAClC,OAAO,WAAW,CACjB,QAAS,GAAG,iDAAiD,EAC7D,UAAW,KACZ,CAAC,EACD,MACD,CAEA,OAAO,KAAK,CACX,OACC,gGACD,KAAM,CACL,sBAAuB,KAAK,YAAY,KACxC,SAAUA,CACX,EACA,OAAQ,GACR,eAAgB,GAAG,iBAAiB,EACpC,SAAWG,GAAa,CACvB,GAAIA,EAAS,IAAK,CACjB,OAAO,WAAW,CACjB,QAAS,GAAG,0BAA2B,CAAC,KAAK,YAAY,IAAI,CAAC,EAC9D,UAAW,KACZ,CAAC,EACD,MACD,CAEAJ,EAAG,cAAc,4BAA4BI,EAAS,QAAS,EAAK,CACrE,CACD,CAAC,CACF,CAEA,sBAAuB,CACtB,IAAMC,EAAgB,KAAK,cAAc,gBACzC,MAAO,CACN,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,gBACX,UAAW,QACX,QAASA,EAAc,cACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,gBACX,UAAW,QACX,QAASA,EAAc,cACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,kBAAkB,EAC5B,UAAW,mBACX,UAAW,QACX,QAASA,EAAc,iBACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,gBACX,UAAW,QACX,QAASA,EAAc,cACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,gBAAgB,EAC1B,UAAW,iBACX,UAAW,QACX,QAASA,EAAc,eACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,MAAO,GAAG,mBAAmB,EAC7B,UAAW,oBACX,UAAW,QACX,QAASA,EAAc,kBACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,gBACX,UAAW,QACX,QAASA,EAAc,cACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,MAAO,GAAG,kBAAkB,EAC5B,UAAW,mBACX,UAAW,QACX,QAASA,EAAc,iBACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,UAAW,eACZ,EACA,CACC,MAAO,GAAG,mBAAmB,EAC7B,UAAW,cACX,UAAW,QACX,QAASA,EAAc,YACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,CACD,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,kBAAkB,EAC5B,UAAW,oBACX,UAAW,QACX,QAAS,KAAK,YAAY,YAAc,KAAK,YAAY,MAAQ,EAAI,EACrE,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,EACA,UAAW,CAAC,QAAQ,KAAK,YAAY,YAAc,KAAK,YAAY,KAAK,CAC1E,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,iBAAiB,EAC3B,UAAW,kBACX,UAAW,QACX,QAASA,EAAc,gBACvB,SAAU,IAAM,CACf,KAAK,2BAA2B,CACjC,EACA,WAAY,sEACb,EACA,CACC,UAAW,cACZ,EACA,CACC,UAAW,eACZ,EACA,CACC,UAAW,6BACX,UAAW,MACZ,EACA,CACC,UAAW,WACX,UAAW,MACZ,EACA,CACC,UAAW,gBACX,UAAW,0BACX,YAAa,CACd,EACA,CACC,MAAO,GAAG,4BAA4B,EACtC,UAAW,iBACX,UAAW,OACX,OAAQ,CACT,EACA,CACC,UAAW,cACZ,EACA,CACC,MAAO,GAAG,WAAW,EACrB,UAAW,eACX,UAAW,SACX,QAAS,GACT,MAAO,IAAM,CACZ,KAAK,4BAA4B,CAClC,CACD,CACD,CACD,CAEA,wBAAyB,CACxB,MAAO,CACN,CACC,KAAM,GAAG,MAAM,EACf,SAAU,GACV,OAASzB,GACD,OAAO,OAAOA,EAAO,CAAC,UAAW,MAAM,CAAC,CAEjD,EACA,CACC,KAAM,GAAG,aAAa,EACtB,SAAU,EACX,EACA,CACC,KAAM,GAAG,WAAW,EACpB,SAAU,GACV,MAAO,MACR,EACA,CACC,KAAM,GAAG,OAAO,EAChB,SAAU,EACX,EACA,CACC,KAAM,GAAG,SAAS,EAClB,SAAU,EACX,CACD,CACD,CAEA,oBAAoBG,EAAK,CACxB,OAAOA,EAAI,GAAG,OACf,CACD,ECjcA,OAAO,QAAQ,sCAAsC,EAErD,QAAQ,SAAS,oBAAoB,YAAc,KAAkB,CAiBpE,YAAYuB,EAAM,CACjB,OAAO,OAAO,KAAMA,CAAI,EACxB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,KAAK,SAAS,MAAM,EACpB,IAAIC,EAAa,KAEb,KAAK,SAAS,KAAK,iBAAiB,EAAE,OAAS,GAClDA,EAAa,KAAK,SAAS,KAAK,iBAAiB,EACjDA,EAAW,MAAM,GAEjBA,EAAa,KAAK,SAAS,OAC1B,8BAA8B,KAAK,eAAiB,YACrD,EAAE,KAAK,iBAAiB,EAGzB,OAAO,KAAK,KAAK,MAAM,EAAE,IAAKC,GAAQ,CACrC,IAAIC,EAAS,KAAK,OAAOD,GACzB,GAAIC,EAAO,IAAMA,EAAO,KAAOA,EAAO,GAAI,CAEzC,IAAIC,EAAK,CAAC,UAAW,WAAY,QAAS,UAAU,EAChDC,EAAU,OAAO,OACpBF,EAAO,GAAIC,EAAI,CAAE,WAAY,EAAK,EAAG,CAAE,SAAU,KAAK,QAAS,CAChE,EACIE,EAAU,OAAO,OACpBH,EAAO,GAAIC,EAAI,CAAE,WAAY,EAAK,EAAG,CAAE,SAAU,KAAK,QAAS,CAChE,EACIG,EAAgB,GAAGF,MAAYC,KACnC,IAAIE,EAAc,EACjB;AAAA,mCAC8B,GAAGN,CAAG;AAAA,mCACNK;AAAA,YAE/B,CACD,KAAO,CACN,IAAIE,EAAO,CACV,MAAON,EAAO,GACd,MAAO,GAAGD,CAAG,EACb,SAAU,WACV,SAAU,KAAK,QAChB,EACA,IAAIM,EAAc,OAAO,MAAM,mBAAmBC,CAAI,CACvD,CAEAR,EAAW,OAAOO,CAAW,EACzBL,EAAO,OAAS,GACPK,EAAY,KAAK,gBAAgB,EACvC,SAASL,EAAO,EAAE,CAE1B,CAAC,CACF,CACD",
  "names": ["opts", "response", "first_transaction", "me", "sort_by", "sort_order", "transaction", "amount", "symbol", "$row", "name", "updated_amount", "reference_number", "party_type", "party", "id", "current_index", "$current_transaction", "__spreadProps", "__spreadValues", "next_transaction", "previous_transaction", "opts", "tab", "tab_name", "message", "with_new_voucher", "document_type", "doc", "unallocated_amount", "alert_string", "opts", "me", "document_type", "message", "doc", "doctype", "docname", "data", "allow_edit", "success_callback", "values", "method", "args", "__spreadProps", "__spreadValues", "response", "party_type", "value", "fields", "opts", "me", "reference_number", "party", "party_type", "field", "response", "value", "opts", "filter_fields", "document_types", "field", "vouchers", "transaction_amount", "key", "value", "result", "table_data", "row", "formatted_value", "datatable_options", "idx", "voucher_row", "id", "total_allocated", "a", "b", "max_allocated", "unallocated", "actual_unallocated", "total_amount", "unallocated_amount", "currency", "summary_field", "allocated_amount", "me", "selected_vouchers", "selected_map", "voucher_rows", "response", "filters_state", "opts", "$container", "key", "values", "df", "value_1", "value_2", "visible_value", "number_card", "data"]
}

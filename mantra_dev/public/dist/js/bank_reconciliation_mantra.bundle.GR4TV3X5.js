(()=>{var f=Object.defineProperty,h=Object.defineProperties;var y=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var u=(l,e,t)=>e in l?f(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,o=(l,e)=>{for(var t in e||(e={}))b.call(e,t)&&u(l,t,e[t]);if(p)for(var t of p(e))g.call(e,t)&&u(l,t,e[t]);return l},_=(l,e)=>h(l,y(e));frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.PanelManager=class{constructor(e){Object.assign(this,e),this.make()}make(){this.init_panels()}async init_panels(){this.transactions=await this.get_bank_transactions(),this.$wrapper.empty(),this.$panel_wrapper=this.$wrapper.append(`
			<div class="panel-container d-flex"></div>
		`).find(".panel-container"),this.render_panels()}async get_bank_transactions(){return await frappe.call({method:"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.get_bank_transactions",args:{bank_account:this.doc.bank_account,from_date:this.doc.bank_statement_from_date,to_date:this.doc.bank_statement_to_date,order_by:this.order||"date asc"},freeze:!0,freeze_message:__("Fetching Bank Transactions")}).then(t=>t.message)}render_panels(){if(this.set_actions_panel_default_states(),!this.transactions||!this.transactions.length)this.render_no_transactions();else{this.render_list_panel();let e=this.transactions[0];this.$list_container.find("#"+e.name).click()}}set_actions_panel_default_states(){this.actions_tab="match_voucher-tab",this.actions_filters={payment_entry:0,journal_entry:0,purchase_invoice:1,sales_invoice:1,loan_repayment:0,loan_disbursement:0,expense_claim:0,bank_transaction:0,exact_match:0,exact_party_match:0,unpaid_invoices:1}}render_no_transactions(){this.$panel_wrapper.empty(),this.$panel_wrapper.append(`
			<div class="no-transactions">
				<img src="/assets/frappe/images/ui-states/list-empty-state.svg" alt="Empty State">
				<p>${__("No Transactions found for the current filters.")}</p>
			</div>
		`)}render_list_panel(){this.$panel_wrapper.append(`
			<div class="list-panel">
				<div class="sort-by"></div>
				<div class="list-container"></div>
			</div>
		`),this.render_sort_area(),this.render_transactions_list()}render_actions_panel(){this.actions_panel=new erpnext.accounts.bank_reconciliation.ActionsPanelManager({$wrapper:this.$panel_wrapper,transaction:this.active_transaction,doc:this.doc,panel_manager:this})}render_sort_area(){this.$sort_area=this.$panel_wrapper.find(".sort-by"),this.$sort_area.append(`
			<div class="sort-by-title"> ${__("Sort By")} </div>
			<div class="sort-by-selector p-10"></div>
		`);var e=this;new frappe.ui.SortSelector({parent:e.$sort_area.find(".sort-by-selector"),args:{sort_by:e.order_by||"date",sort_order:e.order_direction||"asc",options:[{fieldname:"date",label:__("Date")},{fieldname:"withdrawal",label:__("Withdrawal")},{fieldname:"deposit",label:__("Deposit")},{fieldname:"unallocated_amount",label:__("Unallocated Amount")}]},change:function(t,a){e.order_by=t||e.order_by||"date",e.order_direction=a||e.order_direction||"asc",e.order=e.order_by+" "+e.order_direction,e.init_panels()}})}render_transactions_list(){this.$list_container=this.$panel_wrapper.find(".list-container"),this.transactions.map(e=>{let t=e.deposit||e.withdrawal,a=e.withdrawal?"-":"+",n=this.$list_container.append(`
				<div id="${e.name}" class="transaction-row p-10">
					<!-- Date & Amount -->
					<div class="d-flex">
						<div class="w-50">
							<span title="${__("Date")}">${frappe.format(e.date,{fieldtype:"Date"})}</span>
						</div>

						<div class="w-50 bt-amount-contianer">
							<span
								title="${__("Amount")}"
								class="bt-amount ${e.withdrawal?"text-danger":"text-success"}"
							>
								<b>${a} ${format_currency(t,e.currency)}</b>
							</span>
						</div>
					</div>


					<!-- Description, Reference, Party -->
					<div
						title="${__("Account Holder")}"
						class="account-holder ${e.bank_party_name?"":"hide"}"
					>
						<span class="account-holder-value">${e.bank_party_name}</span>
					</div>

					<div
						title="${__("Description")}"
						class="description ${e.description?"":"hide"}"
					>
						<span class="description-value">${e.description}</span>
					</div>

					<div
						title="${__("Reference")}"
						class="reference ${e.reference_number?"":"hide"}"
					>
						<span class="reference-value">${e.reference_number}</span>
					</div>
				</div>
			`).find("#"+e.name);n.on("click",()=>{n.addClass("active").siblings().removeClass("active"),this.active_transaction=this.transactions.find(({name:i})=>i===e.name),this.render_actions_panel()})})}refresh_transaction(e=null,t=null,a=null,n=null){let i=this.active_transaction.name,r=this.transactions.findIndex(({name:d})=>d===i),s=this.$list_container.find("#"+i),c=this.transactions[r];e?this.transactions[r].unallocated_amount=e:(this.transactions[r]=_(o({},c),{reference_number:t,party_type:a,party:n}),s.find(".reference").removeClass("hide"),s.find(".reference-value").text(t||"--")),s.click()}move_to_next_transaction(){let e=this.active_transaction.name,t=this.$list_container.find("#"+e),a=this.transactions.findIndex(({name:r})=>r===e),n=this.transactions[a+1],i=this.transactions[a-1];n?(this.active_transaction=n,t.next().click()):i&&(this.active_transaction=i,t.prev().click()),this.transactions.splice(a,1),t.remove(),!n&&!i&&(this.active_transaction=null,this.render_no_transactions())}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.ActionsPanelManager=class{constructor(e){Object.assign(this,e),this.make()}make(){this.init_actions_container(),this.render_tabs(),this.$actions_container.find("#"+this.panel_manager.actions_tab).trigger("click")}init_actions_container(){this.$wrapper.find(".actions-panel").length>0?(this.$actions_container=this.$wrapper.find(".actions-panel"),this.$actions_container.empty()):this.$actions_container=this.$wrapper.append(`
				<div class="actions-panel"></div>
			`).find(".actions-panel"),this.$actions_container.append(`
			<div class="form-tabs-list">
				<ul class="nav form-tabs" role="tablist" aria-label="Action Tabs">
				</ul>
			</div>

			<div class="tab-content p-10"></div>
		`)}render_tabs(){this.tabs_list_ul=this.$actions_container.find(".form-tabs"),this.$tab_content=this.$actions_container.find(".tab-content"),frappe.realtime.off("doc_update"),["Details","Match Voucher","Create Voucher"].forEach(e=>{let t=frappe.scrub(e);this.add_tab(t,e),this.tabs_list_ul.find(`#${t}-tab`).on("click",()=>{this.$tab_content.empty(),e=="Details"?new erpnext.accounts.bank_reconciliation.DetailsTab({actions_panel:this,transaction:this.transaction,panel_manager:this.panel_manager}):e=="Match Voucher"?new erpnext.accounts.bank_reconciliation.MatchTab({actions_panel:this,transaction:this.transaction,panel_manager:this.panel_manager,doc:this.doc}):new erpnext.accounts.bank_reconciliation.CreateTab({actions_panel:this,transaction:this.transaction,panel_manager:this.panel_manager,company:this.doc.company})})})}add_tab(e,t){this.tabs_list_ul.append(`
			<li class="nav-item">
				<a class="nav-actions-link"
					id="${e}-tab" data-toggle="tab"
					href="#" role="tab" aria-controls="${t}"
				>
					${__(t)}
				</a>
			</li>
		`)}after_transaction_reconcile(e,t=!1,a){let n=e,i=flt(n.unallocated_amount);if(i>0)frappe.show_alert({message:__("Bank Transaction {0} Partially {1}",[this.transaction.name,t?"Reconciled":"Matched"]),indicator:"blue"}),this.panel_manager.refresh_transaction(i);else{let r=__("Bank Transaction {0} Matched",[this.transaction.name]);t&&(r=__("Bank Transaction {0} reconciled with a new {1}",[this.transaction.name,a])),frappe.show_alert({message:r,indicator:"green"}),this.panel_manager.move_to_next_transaction()}}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.CreateTab=class{constructor(e){Object.assign(this,e),this.make()}make(){this.panel_manager.actions_tab="create_voucher-tab",this.create_field_group=new frappe.ui.FieldGroup({fields:this.get_create_tab_fields(),body:this.actions_panel.$tab_content,card_layout:!0}),this.create_field_group.make()}create_voucher(){var e=this;let a=this.create_field_group.get_values().document_type;this.create_voucher_bts(!1,n=>e.actions_panel.after_transaction_reconcile(n,!0,a))}edit_in_full_page(){this.create_voucher_bts(!0,e=>{let t=frappe.model.sync(e),a=t[0].doctype,n=t[0].name;frappe.socketio.doc_subscribe(a,n),frappe.realtime.off("doc_update"),frappe.realtime.on("doc_update",i=>{i.doctype===a&&i.name===n&&this.reconcile_new_voucher(a,n)}),frappe.open_in_new_tab=!0,frappe.set_route("Form",a,n)})}create_voucher_bts(e=!1,t){let a=this.create_field_group.get_values(),n=a.document_type,i="mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra",r={bank_transaction_name:this.transaction.name,reference_number:a.reference_number,reference_date:a.reference_date,party_type:a.party_type,party:a.party,posting_date:a.posting_date,mode_of_payment:a.mode_of_payment,allow_edit:e};n==="Payment Entry"?(i=i+".create_payment_entry_bts",r=_(o({},r),{project:a.project,cost_center:a.cost_center})):(i=i+".create_journal_entry_bts",r=_(o({},r),{entry_type:a.journal_entry_type,second_account:a.second_account})),frappe.call({method:i,args:r,callback:s=>{if(s.exc){frappe.show_alert({message:__("Failed to create {0} against {1}",[n,this.transaction.name]),indicator:"red"});return}else s.message&&t(s.message)}})}reconcile_new_voucher(e,t){var a=this;frappe.call({method:"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.reconcile_voucher",args:{transaction_name:this.transaction.name,amount:this.transaction.unallocated_amount,voucher_type:e,voucher_name:t},callback:n=>{if(n.exc){frappe.show_alert({message:__("Failed to reconcile new {0} against {1}",[e,a.transaction.name]),indicator:"red"});return}else if(n.message&&Object.keys(n.message).length>0){if(n.message.deleted){frappe.realtime.off("doc_update");return}a.actions_panel.after_transaction_reconcile(n.message,!0,e)}}})}get_create_tab_fields(){let e=this.transaction.party_type||(flt(this.transaction.withdrawal)>0?"Supplier":"Customer");return[{label:__("Document Type"),fieldname:"document_type",fieldtype:"Select",options:`Payment Entry
Journal Entry`,default:"Payment Entry",onchange:()=>{let t=this.create_field_group.get_value("document_type"),a=this.create_field_group;a.get_field("party").df.reqd=t==="Payment Entry",a.get_field("party_type").df.reqd=t==="Payment Entry",a.get_field("journal_entry_type").df.reqd=t==="Journal Entry",a.get_field("second_account").df.reqd=t==="Journal Entry",this.create_field_group.refresh()}},{fieldtype:"Section Break",fieldname:"details",label:"Details"},{fieldname:"reference_number",fieldtype:"Data",label:__("Reference Number"),default:this.transaction.reference_number||this.transaction.description?this.transaction.description.slice(0,140):""},{fieldname:"posting_date",fieldtype:"Date",label:__("Posting Date"),reqd:1,default:this.transaction.date},{fieldname:"reference_date",fieldtype:"Date",label:__("Cheque/Reference Date"),reqd:1,default:this.transaction.date},{fieldname:"mode_of_payment",fieldtype:"Link",label:__("Mode of Payment"),options:"Mode of Payment"},{fieldname:"edit_in_full_page",fieldtype:"Button",label:__("Edit in Full Page"),click:()=>{this.edit_in_full_page()}},{fieldname:"column_break_7",fieldtype:"Column Break"},{label:__("Journal Entry Type"),fieldname:"journal_entry_type",fieldtype:"Select",options:`Bank Entry
Journal Entry
Inter Company Journal Entry
Cash Entry
Credit Card Entry
Debit Note
Credit Note
Contra Entry
Excise Entry
Write Off Entry
Opening Entry
Depreciation Entry
Exchange Rate Revaluation
Deferred Revenue
Deferred Expense`,default:"Bank Entry",depends_on:"eval: doc.document_type == 'Journal Entry'"},{fieldname:"second_account",fieldtype:"Link",label:"Account",options:"Account",get_query:()=>({filters:{is_group:0,company:this.company}}),depends_on:"eval: doc.document_type == 'Journal Entry'"},{fieldname:"party_type",fieldtype:"Link",label:"Party Type",options:"DocType",reqd:1,default:e,get_query:function(){return{filters:{name:["in",Object.keys(frappe.boot.party_account_types)]}}},onchange:()=>{let t=this.create_field_group.get_value("party_type");this.create_field_group.get_field("party").df.options=t}},{fieldname:"party",fieldtype:"Link",label:"Party",default:this.transaction.party,options:e,reqd:1},{fieldname:"project",fieldtype:"Link",label:"Project",options:"Project",depends_on:"eval: doc.document_type == 'Payment Entry'"},{fieldname:"cost_center",fieldtype:"Link",label:"Cost Center",options:"Cost Center",depends_on:"eval: doc.document_type == 'Payment Entry'"},{fieldtype:"Section Break"},{label:__("Hidden field for alignment"),fieldname:"hidden_field",fieldtype:"Data",hidden:1},{fieldtype:"Column Break"},{label:__("Create"),fieldtype:"Button",primary:!0,click:()=>this.create_voucher()}]}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.DetailsTab=class{constructor(e){$.extend(this,e),this.make()}make(){this.panel_manager.actions_tab="details-tab",this.details_field_group=new frappe.ui.FieldGroup({fields:this.get_detail_tab_fields(),body:this.actions_panel.$tab_content,card_layout:!0}),this.details_field_group.make()}update_bank_transaction(){var e=this;let t=this.details_field_group.get_value("reference_number"),a=this.details_field_group.get_value("party"),n=this.details_field_group.get_value("party_type");if(!["reference_number","party","party_type"].some(r=>e.details_field_group.get_value(r)!==e.transaction[r])){frappe.show_alert({message:__("No changes to update"),indicator:"yellow"});return}frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.update_bank_transaction",args:{bank_transaction_name:e.transaction.name,reference_number:t,party_type:n,party:a},freeze:!0,freeze_message:__("Updating ..."),callback:r=>{if(r.exc){frappe.show_alert(__("Failed to update {0}",[e.transaction.name]));return}e.panel_manager.refresh_transaction(null,t,n,a),frappe.show_alert(__("Bank Transaction {0} updated",[e.transaction.name]))}})}get_detail_tab_fields(){return[{label:__("ID"),fieldname:"name",fieldtype:"Link",options:"Bank Transaction",default:this.transaction.name,read_only:1},{label:__("Date"),fieldname:"date",fieldtype:"Date",default:this.transaction.date,read_only:1},{label:__("Deposit"),fieldname:"deposit",fieldtype:"Currency",default:this.transaction.deposit,read_only:1},{label:__("Withdrawal"),fieldname:"withdrawal",fieldtype:"Currency",default:this.transaction.withdrawal,read_only:1},{fieldtype:"Column Break"},{label:__("Description"),fieldname:"description",fieldtype:"Small Text",default:this.transaction.description,read_only:1},{label:__("To Allocate"),fieldname:"unallocated_amount",fieldtype:"Currency",options:"account_currency",default:this.transaction.unallocated_amount,read_only:1},{label:__("Currency"),fieldname:"account_currency",fieldtype:"Link",options:"Currency",read_only:1,default:this.transaction.currency,hidden:1},{label:__("Account Holder"),fieldname:"account",fieldtype:"Data",default:this.transaction.bank_party_name,read_only:1,hidden:this.transaction.bank_party_name?0:1},{label:__("Party Account Number"),fieldname:"account_number",fieldtype:"Data",default:this.transaction.bank_party_account_number,read_only:1,hidden:this.transaction.bank_party_account_number?0:1},{label:__("Party IBAN"),fieldname:"iban",fieldtype:"Data",default:this.transaction.bank_party_iban,read_only:1,hidden:this.transaction.bank_party_iban?0:1},{label:__("Update"),fieldtype:"Section Break",fieldname:"update_section"},{label:__("Reference Number"),fieldname:"reference_number",fieldtype:"Data",default:this.transaction.reference_number},{fieldtype:"Column Break"},{label:__("Party Type"),fieldname:"party_type",fieldtype:"Link",options:"DocType",get_query:function(){return{filters:{name:["in",Object.keys(frappe.boot.party_account_types)]}}},onchange:()=>{let e=this.details_field_group.get_value("party_type");this.details_field_group.get_field("party").df.options=e},default:this.transaction.party_type||null},{label:__("Party"),fieldname:"party",fieldtype:"Link",default:this.transaction.party,options:this.transaction.party_type||null},{fieldtype:"Section Break"},{label:__("Hidden field for alignment"),fieldname:"hidden_field",fieldtype:"Data",hidden:1},{fieldtype:"Column Break"},{label:__("Submit"),fieldname:"submit_transaction",fieldtype:"Button",primary:!0,click:()=>this.update_bank_transaction()}]}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.MatchTab=class{constructor(e){$.extend(this,e),this.make()}async make(){this.panel_manager.actions_tab="match_voucher-tab",this.match_field_group=new frappe.ui.FieldGroup({fields:this.get_match_tab_fields(),body:this.actions_panel.$tab_content,card_layout:!0}),this.match_field_group.make(),this.summary_empty_state(),await this.populate_matching_vouchers()}summary_empty_state(){this.match_field_group.get_field("transaction_amount_summary").$wrapper.append(`<div class="report-summary reconciliation-summary" style="height: 90px;">
			</div>`)}async populate_matching_vouchers(){let e=this.match_field_group.get_values(),t=Object.keys(e).filter(i=>e[i]===1);this.update_filters_in_state(t);let a=await this.get_matching_vouchers(t);this.render_data_table(a);let n=this.transaction.withdrawal||this.transaction.deposit;this.render_transaction_amount_summary(flt(n),flt(this.transaction.unallocated_amount),flt(this.transaction.unallocated_amount),this.transaction.currency)}update_filters_in_state(e){Object.keys(this.panel_manager.actions_filters).map(t=>{let a=e.includes(t)?1:0;this.panel_manager.actions_filters[t]=a})}async get_matching_vouchers(e){return await frappe.call({method:"mantra_dev.mantra_dev.doctype.bank_reconciliation_tool_mantra.bank_reconciliation_tool_mantra.get_linked_payments",args:{bank_transaction_name:this.transaction.name,document_types:e,from_date:this.doc.bank_statement_from_date,to_date:this.doc.bank_statement_to_date,filter_by_reference_date:this.doc.filter_by_reference_date,from_reference_date:this.doc.from_reference_date,to_reference_date:this.doc.to_reference_date}}).then(a=>a.message)||[]}render_data_table(e){this.summary_data={};let t=e.map(n=>[{content:n.reference_date||n.posting_date,format:i=>n.date_match?i.bold():i},{content:n.paid_amount,format:i=>{let r=format_currency(i,n.currency);return n.amount_match||n.unallocated_amount_match?r.bold():r}},{content:n.reference_no||"",format:i=>n.reference_number_match||n.name_in_desc_match?i.bold():i},{content:n.party,format:i=>{n.party_name&&frappe.utils.add_link_title(n.party_type,n.party,n.party_name);let r=frappe.format(n.party,{fieldtype:"Link",options:n.party_type});return n.party_match?r.bold():r}},{content:n.name,format:i=>frappe.format(n.name,{fieldtype:"Link",options:n.doctype}),doctype:n.doctype}]),a={columns:this.get_data_table_columns(),data:t,dynamicRowHeight:!0,checkboxColumn:!0,inlineFilters:!0,layout:"fluid",serialNoColumn:!1};this.actions_table=new frappe.DataTable(this.match_field_group.get_field("vouchers").$wrapper[0],a),this.actions_table.style.setStyle(".dt-cell[data-row-index='0']",{backgroundColor:"#F4FAEE"}),this.bind_row_check_event()}bind_row_check_event(){$(this.actions_table.bodyScrollable).on("click",".dt-cell__content input",e=>{let t=$(e.currentTarget).closest(".dt-cell").data().rowIndex,a=this.actions_table.getRows()[t];this.check_data_table_row(a)})}check_data_table_row(e){if(!e)return;let t=e[5].content,a=this.get_amount_from_row(e);t in this.summary_data?delete this.summary_data[t]:this.summary_data[t]=a;let n=Object.values(this.summary_data).reduce((d,m)=>d+m,0),i=Math.min(n,this.transaction.unallocated_amount),r=this.transaction.withdrawal||this.transaction.deposit,s=flt(this.transaction.unallocated_amount)-flt(i),c=flt(this.transaction.unallocated_amount)-flt(n);this.render_transaction_amount_summary(flt(r),s,c,this.transaction.currency)}render_transaction_amount_summary(e,t,a,n){let i=this.match_field_group.get_field("transaction_amount_summary").$wrapper;i.empty();let r=flt(e)-flt(t);new erpnext.accounts.bank_reconciliation.SummaryCard({$wrapper:i,values:{Amount:[e],"Allocated Amount":[r,""],"To Allocate":[t,t<0?"text-danger":t>0?"text-blue":"text-success",a]},currency:n,wrapper_class:"reconciliation-summary"})}reconcile_selected_vouchers(){let e=this,t=[],a=this.actions_table.rowmanager.checkMap,n=this.actions_table.getRows();if(a.forEach((i,r)=>{if(i===1){let s=n[r];t.push({payment_doctype:s[5].doctype,payment_name:s[5].content,amount:this.get_amount_from_row(s)})}}),!t.length>0){frappe.show_alert({message:__("Please select at least one voucher to reconcile"),indicator:"red"});return}frappe.call({method:"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.reconcile_vouchers",args:{bank_transaction_name:this.transaction.name,vouchers:t},freeze:!0,freeze_message:__("Reconciling ..."),callback:i=>{if(i.exc){frappe.show_alert({message:__("Failed to reconcile {0}",[this.transaction.name]),indicator:"red"});return}e.actions_panel.after_transaction_reconcile(i.message,!1)}})}get_match_tab_fields(){let e=this.panel_manager.actions_filters;return[{label:__("Payment Entry"),fieldname:"payment_entry",fieldtype:"Check",default:e.payment_entry,onchange:()=>{this.populate_matching_vouchers()}},{label:__("Journal Entry"),fieldname:"journal_entry",fieldtype:"Check",default:e.journal_entry,onchange:()=>{this.populate_matching_vouchers()}},{fieldtype:"Column Break"},{label:__("Purchase Invoice"),fieldname:"purchase_invoice",fieldtype:"Check",default:e.purchase_invoice,onchange:()=>{this.populate_matching_vouchers()}},{label:__("Sales Invoice"),fieldname:"sales_invoice",fieldtype:"Check",default:e.sales_invoice,onchange:()=>{this.populate_matching_vouchers()}},{fieldtype:"Column Break"},{label:__("Loan Repayment"),fieldname:"loan_repayment",fieldtype:"Check",default:e.loan_repayment,onchange:()=>{this.populate_matching_vouchers()}},{label:__("Loan Disbursement"),fieldname:"loan_disbursement",fieldtype:"Check",default:e.loan_disbursement,onchange:()=>{this.populate_matching_vouchers()}},{fieldtype:"Column Break"},{label:__("Expense Claim"),fieldname:"expense_claim",fieldtype:"Check",default:e.expense_claim,onchange:()=>{this.populate_matching_vouchers()}},{label:__("Bank Transaction"),fieldname:"bank_transaction",fieldtype:"Check",default:e.bank_transaction,onchange:()=>{this.populate_matching_vouchers()}},{fieldtype:"Section Break"},{label:__("Show Exact Amount"),fieldname:"exact_match",fieldtype:"Check",default:e.exact_match,onchange:()=>{this.populate_matching_vouchers()}},{fieldtype:"Column Break"},{label:__("Show Exact Party"),fieldname:"exact_party_match",fieldtype:"Check",default:this.transaction.party_type&&this.transaction.party?1:0,onchange:()=>{this.populate_matching_vouchers()},read_only:!Boolean(this.transaction.party_type&&this.transaction.party)},{fieldtype:"Column Break"},{label:__("Unpaid Vouchers"),fieldname:"unpaid_invoices",fieldtype:"Check",default:e.unpaid_invoices,onchange:()=>{this.populate_matching_vouchers()},depends_on:"eval: doc.sales_invoice || doc.purchase_invoice || doc.expense_claim"},{fieldtype:"Column Break"},{fieldtype:"Section Break"},{fieldname:"transaction_amount_summary",fieldtype:"HTML"},{fieldname:"vouchers",fieldtype:"HTML"},{fieldtype:"Section Break",fieldname:"section_break_reconcile",hide_border:1},{label:__("Hidden field for alignment"),fieldname:"hidden_field_2",fieldtype:"Data",hidden:1},{fieldtype:"Column Break"},{label:__("Reconcile"),fieldname:"bt_reconcile",fieldtype:"Button",primary:!0,click:()=>{this.reconcile_selected_vouchers()}}]}get_data_table_columns(){return[{name:__("Date"),editable:!1,format:e=>frappe.format(e,{fieldtype:"Date"})},{name:__("Outstanding"),editable:!1},{name:__("Reference"),editable:!1,align:"left"},{name:__("Party"),editable:!1},{name:__("Voucher"),editable:!1}]}get_amount_from_row(e){return e[2].content}};frappe.provide("erpnext.accounts.bank_reconciliation");erpnext.accounts.bank_reconciliation.SummaryCard=class{constructor(e){Object.assign(this,e),this.make()}make(){this.$wrapper.empty();let e=null;this.$wrapper.find(".report-summary").length>0?(e=this.$wrapper.find(".report-summary"),e.empty()):e=this.$wrapper.append(`<div class="report-summary ${this.wrapper_class||""}"></div>`).find(".report-summary"),Object.keys(this.values).map(t=>{let a=this.values[t];if(a[2]&&a[2]!==a[0]){let i={fieldtype:"Currency",options:"currency"},r=frappe.format(a[0],i,{only_value:!0},{currency:this.currency}),s=frappe.format(a[2],i,{only_value:!0},{currency:this.currency}),c=`${r} (${s})`;var n=$(`<div class="summary-item">
						<div class="summary-label">${__(t)}</div>
						<div class="summary-value">${c}</div>
					</div>`)}else{let i={value:a[0],label:__(t),datatype:"Currency",currency:this.currency};var n=frappe.utils.build_summary_item(i)}e.append(n),a.length>1&&n.find(".summary-value").addClass(a[1])})}};})();
//# sourceMappingURL=bank_reconciliation_mantra.bundle.GR4TV3X5.js.map

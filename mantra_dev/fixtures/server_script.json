[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:17:46.261400",
  "module": "Mantra Dev",
  "name": "Service Item",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Order",
  "script": "for i in doc.items:\n    if i.custom_is_service_item==1:\n        if i.delivered_qty != i.qty:\n            i.delivered_qty=i.qty\n        \n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:18:55.794683",
  "module": "Mantra Dev",
  "name": "Auto create DC",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "\nif len(doc.items) == 1:\n                # frappe.msgprint(\"IFf\")\n                for item in doc.items:\n                        is_service_item = frappe.db.get_value(\"Item\", item.get('item_code'), 'custom_is_service_item')\n                        if is_service_item != 1:\n                            dc = frappe.new_doc(\"Delivery Note\")\n                            dc.custom_sales_invoice_no = doc.name\n                            dc.customer = doc.customer\n                            dc.posting_date = doc.posting_date\n                            dc.posting_time = doc.posting_time\n                            dc.custom_sales_person = doc.custom_sales_person\n                            dc.company = doc.company\n                            dc.set_warehouse = doc.set_warehouse\n                            dc.dispatch_address_name = \"\"\n                            dc.items = []\n                            print(\"Processing Item:\", item)\n                            if not item.get('item_code'):\n                                frappe.throw(\"Item code is missing in one of the items.\")\n                            else:\n                                    dn_item = dc.append('items', {})\n                                    dn_item.item_code = item.item_code\n                                    dn_item.item_name = item.item_name\n                                    dn_item.qty = item.qty\n                                    dn_item.uom = item.uom\n                                    dn_item.rate = item.rate\n                                    dn_item.amount = item.amount\n                                    dn_item.against_sales_invoice = doc.name\n                                    dn_item.si_detail = item.name\n                                    if item.get('sales_order'):\n                                        dn_item.against_sales_order = item.sales_order\n                                        dn_item.so_detail = item.so_detail\n                            dc.total = doc.total if doc.total is not None else 0\n                            dc.net_total = doc.net_total if doc.net_total is not None else 0\n                            dc.grand_total = doc.grand_total if doc.grand_total is not None else 0\n                            dc.base_total = doc.base_total if doc.base_total is not None else 0\n                            dc.base_net_total = doc.base_net_total if doc.base_net_total is not None else 0\n                            dc.base_grand_total = doc.base_grand_total if doc.base_grand_total is not None else 0\n                            dc.insert(ignore_permissions=True)\n                            # frappe.db.commit()\n                            for dc_items in dc.items:\n                                if dc_items.so_detail:\n                                    qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n                                    print(qty)\n                                    if qty is None:\n                                        qty = 0\n                                    t_qty = qty + dc_items.qty\n                                    frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n                            # frappe.db.commit()\n                            frappe.msgprint(f\"Delivery Note {dc.name} created successfully.\")\nelse:\n                # frappe.msgprint(\"else\")\n                dc = frappe.new_doc(\"Delivery Note\")\n                dc.custom_sales_invoice_no = doc.name\n                dc.customer = doc.customer\n                dc.posting_date = doc.posting_date\n                dc.posting_time = doc.posting_time\n                dc.custom_sales_person = doc.custom_sales_person\n                dc.company = doc.company\n                dc.set_warehouse = doc.set_warehouse\n                dc.dispatch_address_name = \"\"\n                dc.items = []\n                for item in doc.items:\n                    print(\"Processing Item:\", item)\n                    if not item.get('item_code'):\n                        frappe.throw(\"Item code is missing in one of the items.\")\n                    else:\n                        is_service_item = frappe.db.get_value(\"Item\", item.get('item_code'), 'custom_is_service_item')\n                        if is_service_item != 1:\n                            dn_item = dc.append('items', {})\n                            dn_item.item_code = item.item_code\n                            dn_item.item_name = item.item_name\n                            dn_item.qty = item.qty\n                            dn_item.uom = item.uom\n                            dn_item.rate = item.rate\n                            dn_item.amount = item.amount\n                            dn_item.against_sales_invoice = doc.name\n                            dn_item.si_detail = item.name\n                            if item.get('sales_order'):\n                                dn_item.against_sales_order = item.sales_order\n                                dn_item.so_detail = item.so_detail\n                dc.total = doc.total if doc.total is not None else 0\n                dc.net_total = doc.net_total if doc.net_total is not None else 0\n                dc.grand_total = doc.grand_total if doc.grand_total is not None else 0\n                dc.base_total = doc.base_total if doc.base_total is not None else 0\n                dc.base_net_total = doc.base_net_total if doc.base_net_total is not None else 0\n                dc.base_grand_total = doc.base_grand_total if doc.base_grand_total is not None else 0\n    \n            \n                dc.insert(ignore_permissions=True)\n                # frappe.db.commit()\n                for dc_items in dc.items:\n                    if dc_items.so_detail:\n                        qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n                        print(qty)\n                        if qty is None:\n                            qty = 0\n                        t_qty = qty + dc_items.qty\n                        frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n                # frappe.db.commit()\n                frappe.msgprint(f\"Delivery Note {dc.name} created successfully.\")\n           \n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:19:21.986626",
  "module": "Mantra Dev",
  "name": "After Cancel",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Delivery Note",
  "script": "for dc_items in doc.items:\n        if dc_items.so_detail:\n            qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n            print(qty)\n            # Ensure qty is not None and is numeric\n            if qty is None:\n                qty = 0\n            \n            # Update the quantity\n            t_qty = qty - dc_items.qty\n            frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n            # frappe.db.commit()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Delete",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:19:16.496941",
  "module": "Mantra Dev",
  "name": "After Delete",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Delivery Note",
  "script": "for dc_items in doc.items:\n        if dc_items.so_detail:\n            qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n            print(qty)\n            # Ensure qty is not None and is numeric\n            if qty is None:\n                qty = 0\n            \n            # Update the quantity\n            t_qty = qty - dc_items.qty\n            frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n            # frappe.db.commit()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:19:10.515015",
  "module": "Mantra Dev",
  "name": "After Submit",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Delivery Note",
  "script": "for dc_items in doc.items:\n        if dc_items.so_detail:\n            qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n            print(qty)\n            # Ensure qty is not None and is numeric\n            if qty is None:\n                qty = 0\n            \n            # Update the quantity\n            t_qty = qty - dc_items.qty\n            frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n            # frappe.db.commit()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-11-06 11:19:02.045523",
  "module": "Mantra Dev",
  "name": "After Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Delivery Note",
  "script": "for dc_items in doc.items:\n        if dc_items.so_detail:\n            # Fetch the existing custom_draft_delivered_qty value\n            qty = frappe.db.get_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\")\n            print(qty)\n            # Ensure qty is not None and is numeric\n            if qty is None:\n                qty = 0\n            \n            # Update the quantity\n            t_qty = qty + dc_items.qty\n            frappe.db.set_value(\"Sales Order Item\", dc_items.so_detail, \"custom_draft_deliverd_qty\", t_qty)\n    \n             # Commit the transaction after all updates\n            # frappe.db.commit()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-04-10 17:21:14.634321",
  "module": "Mantra Dev",
  "name": "Indentify Vch subtype for Gl entry.",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "GL Entry",
  "script": "if doc.voucher_type == \"Sales Invoice\":\n    isreturn = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'is_return')\n    isdebitnote = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'is_debit_note')\n    if isreturn == 0 and isdebitnote == 0:\n        doc.voucher_subtype = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'custom_invoice_type')\n\nif doc.voucher_type == \"Purchase Invoice\":\n    isreturn = frappe.db.get_value(\"Purchase Invoice\",doc.voucher_no,'is_return')\n    if isreturn == 0:\n        doc.voucher_subtype = frappe.db.get_value(\"Purchase Invoice\",doc.voucher_no,'custom_invoice_type')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-08-28 16:58:47.054557",
  "module": "Mantra Dev",
  "name": "Set Income Account To SI After Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_return == 0 or doc.update_outstanding_for_self == 0:\n    if doc.tax_category:\n        for item in doc.items:\n                company = frappe.db.get_value('Account Default', {'parent': doc.tax_category},'company')\n                if company:\n                    inc_default = frappe.db.get_value('Item Default', {'parent': item.item_code,'company': doc.company}, 'income_account')\n                    export_sales_account = frappe.db.get_value('Account Default', {'parent': doc.tax_category,'income_account':inc_default,'company': doc.company}, 'export_sales_account')\n                    if export_sales_account is not None and inc_default == item.income_account:\n                        item.income_account = export_sales_account\n                    else:\n                        item.income_account = inc_default\n                else:\n                    inc_default = frappe.db.get_value('Item Default', {'parent': item.item_code,'company': doc.company}, 'income_account')\n                    if inc_default:\n                        item.income_account = inc_default\n                    else: \n                        default_income_account = frappe.db.get_value('Company', {'name': doc.company}, 'default_income_account')\n                        item.income_account = default_income_account\n    else:\n        pass\nelse:\n    pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "warehouse_manager_data_fetch_material_request",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-04-10 17:21:14.746952",
  "module": "Mantra Dev",
  "name": "Warehouse Manager Data Fetch in Material Request",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "warehouse=frappe.form_dict[\"warehouse\"]\n\nwarehouse_manager = []\n\nwm = frappe.db.sql(\"select warehouse_manager from `tabWarehouse Manager` where parent = %s \",(warehouse))\n            \n# for record in wm:\n#         warehouse_manager.append(record)\n\nfrappe.response[\"message\"] = wm",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "warehouse_manager_data_fetch_stock_entry",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-04-10 17:21:14.792850",
  "module": "Mantra Dev",
  "name": "Warehouse Manager Data Fetch in Stock Entry",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "mr_no = frappe.form_dict[\"mr_no\"]\ntw = frappe.db.sql(\"SELECT set_warehouse FROM `tabMaterial Request` WHERE name = %s\", (mr_no,))\n\nset_tw = tw[0][0]  # Extracting the value from the first tuple in the list\n# frappe.msgprint(set_tw)\n\nwarehouse_manager = []\n\nwm = frappe.db.sql(\"select warehouse_manager from `tabWarehouse Manager` where parent = %s \", (set_tw,))\n\n# for record in wm:\n#     warehouse_manager.append(record[\"warehouse_manager\"])\n\n# Assign the string to frappe.response[\"message\"]\nfrappe.response[\"message\"] = wm\n\n# frappe.msgprint(warehouse_manager_str)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "get_party_name",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-07-08 18:26:14.383849",
  "module": "Mantra Dev",
  "name": "Payment Request fetching party_name",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "party_type = frappe.form_dict[\"party_type\"]\nparty = frappe.form_dict[\"party\"]\nref_type = frappe.form_dict[\"ref_type\"]\nref_name = frappe.form_dict[\"ref_name\"]\n\nif party_type == \"Supplier\":\n    sup_name = frappe.db.sql(\"select supplier_name from `tabSupplier` where name = %s \", (party), as_dict = True)\n    if sup_name :\n        supplier_name = sup_name[0][\"supplier_name\"]\n        frappe.response[\"message\"] = supplier_name\nelif party_type == \"Customer\":\n    cust_name = frappe.db.sql(\"select customer_name from `tabCustomer` where name = %s \", (party), as_dict = True)\n    if cust_name :\n        customer_name = cust_name[0][\"customer_name\"]\n        frappe.response[\"message\"] = customer_name\nelif party_type == \"Employee\":\n    emp_name = frappe.db.sql(\"select employee_name from `tabEmployee` where name = %s \", (party), as_dict = True)\n    if emp_name :\n        employee_name = emp_name[0][\"employee_name\"]\n        frappe.response[\"message\"] = employee_name\nelse:\n    extra = \" \"\n    \nif ref_type == \"Purchase Invoice\":\n    ref_pi = frappe.db.sql(\"select custom_invoice_type from `tabPurchase Invoice` where name = %s \", (ref_name), as_dict = True)\n    if ref_pi:\n        refpi = ref_pi[0][\"custom_invoice_type\"]\n        frappe.response[\"ref\"] = refpi\nelif ref_type == \"Purchase Order\":\n    ref_po = frappe.db.sql(\"select custom_purchase_type from `tabPurchase Order` where name = %s \", (ref_name), as_dict = True)\n    if ref_po:\n        refpo = ref_po[0][\"custom_purchase_type\"]\n        frappe.response[\"ref\"] = refpo\nelse:\n    extra = \" \"",
  "script_type": "API"
 }
]
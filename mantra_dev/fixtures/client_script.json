[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2024-11-06 11:20:23.756827",
  "module": "Mantra Dev",
  "name": "Material Request",
  "script": "frappe.ui.form.on('Material Request', {\n    before_save(frm) {\n\t      var main = [];\n        frm.doc.items.forEach(function(child1) {\n            if (child1.item_code) {\n                child1.custom_item_description=child1.item_name\n            }\n        });\n\t\t// your code here\n\t\trefresh_field(\"items\")\n\t}\n})\n\nfrappe.ui.form.on('Material Request Item', {\n\t\n\titem_code(frm) {\n\t      var main = [];\n        frm.doc.items.forEach(function(child1) {\n            console.log(child1.item_code)\n            if (child1.item_code) {\n                console.log(child1.item_code)\n                child1.custom_item_description=child1.item_name\n            }\n        });\n\t\t// your code here\n\t\trefresh_field(\"items\")\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 0,
  "modified": "2024-11-06 11:20:36.046438",
  "module": "Mantra Dev",
  "name": "Purchase Receipt",
  "script": "frappe.ui.form.on('Purchase Receipt', {\r    refresh(frm) {\r        // Your code here (if any)\r    }\r});\r\rfrappe.ui.form.on('Purchase Receipt Item', {\r    custom_qr: function(frm, cdt, cdn) {\r        var d = locals[cdt][cdn];\r\r        if (d.custom_qr && d.custom_qr.trim() !== \"\") {\r            // Split the custom_qr string by comma and trim any whitespace around the elements\r            var custom_qr_list = d.custom_qr.split(',').map(function(item) {\r                return item.trim();\r            }).join('\\n'); // Join the elements with newline characters\r\r            if (d.serial_no) {\r                console.log(\"Appending to existing serial_no\");\r                d.serial_no = d.serial_no + \"\\n\" + custom_qr_list;\r            } else {\r                console.log(\"Initializing serial_no\");\r                d.serial_no = custom_qr_list;\r            }\r\r             // Clear the custom_qr field after processing\r        }\r        // Convert serial_no to a list and log the length of the list\r        var ser = d.serial_no || \"\";\r        var a = ser.split('\\n');\r        console.log(a.length); // Logging the length of the list\r        d.qty=a.length\r        d.received_qty=a.length\r        d.custom_qr = undefined;\r        frm.refresh_field(\"items\"); // Refresh the field to reflect changes\r    }\r});\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-11-06 11:20:04.270800",
  "module": "Mantra Dev",
  "name": "Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note Item', {\n    custom_qc: function(frm, cdt, cdn) {\n        var d = locals[cdt][cdn];\n        \n        if (d.custom_qc) {\n            var serial_no = d.custom_qc;\n            var list = serial_no.split(',').map(Number);\n            var sr_no = [];\n            var completedRequests = 0;\n            var requestsToComplete = d.qty;\n            console.log(list)\n            for (var j = 0; j < list.length; j++) \n            {\n                frappe.call({\n                    method: \"frappe.client.get_value\",\n                    args: {\n                        doctype: \"Serial No\",\n                        fieldname: [\"name\"],\n                        filters: {\n                            name: list[j],\n                            status: \"Active\",\n                            // warehouse: frm.doc.set_warehouse,\n                            // item_code: d.item_code\n                        },\n                    },\n                    callback: function(r) {\n                        completedRequests++;\n                        if (r.message && r.message.name) {\n                            sr_no.push(r.message.name);\n                            if (d.serial_no) {\n                                d.serial_no = d.serial_no + \"\\n\" + r.message.name;\n                            } else {\n                                d.serial_no = r.message.name;\n                            }\n                        }\n                        if (completedRequests === requestsToComplete) {\n                            frm.refresh_field(\"items\");\n                        }\n                    }\n                });\n            }\n            d.custom_qc = undefined;\n        }\n    },\n    qty: function(frm, cdt, cdn) {\n        // var child = locals[cdt][cdn];\n        // child.serial_no = undefined;\n        // frm.refresh_field(\"items\");\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-05-09 17:51:57.000125",
  "module": "Mantra Dev",
  "name": "SI Series Selection based on type",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    onload (frm){\n        if(frm.is_new()){\n            frm.set_query('custom_invoice_type', () => {\n                return {\n                    filters: {\n                        transaction_type: 'Sales Invoice'\n                    }\n                };\n            });\n        }\n    },\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"items\", function(frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    setTimeout(() => {\n        \td.income_account = frm.doc.custom_income_account;\n        \tfrm.refresh_field('item');\n    }, 1000); // 1000 milliseconds = 1 second \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 0,
  "modified": "2024-05-09 17:51:53.034970",
  "module": "Mantra Dev",
  "name": "JV vch type",
  "script": "frappe.ui.form.on('Journal Entry', {\n\tonload (frm){\n        if(frm.is_new()){\n            frm.set_query('voucher_type', () => {\n                return {\n                    filters: {\n                        transaction_type: 'Journal Entry'\n                    }\n                };\n            });\n        }\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-07-02 13:04:56.914158",
  "module": "Mantra Dev",
  "name": "Sales warehouse in SO",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    onload:function(frm) {\r\n        setTimeout(() => {\r\n            frm.set_query('customer', () => {\r\n                return {\r\n                    filters: {\r\n                        workflow_state: 'Approved'\r\n                    }\r\n                };\r\n            });\r\n        }, 1000); // 1000 milliseconds = 1 second   \r\n        // frm.set_query('set_warehouse', () => {\r\n        //     return {\r\n        //         filters: {\r\n        //             custom_is_sales_warehouse: 1\r\n        //         }\r\n        //     };\r\n        // });\r\n        // if (frappe.user_roles.includes(\"System Manager\") == false) {\r\n        // setTimeout(() => {\r\n        //     console.log(\"View Hide\");\r\n        //     frm.remove_custom_button(\"Update Items\");\r\n        // }, 0);\r\n    }\r\n    // }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 0,
  "modified": "2024-05-09 17:51:57.370958",
  "module": "Mantra Dev",
  "name": "Sales warehouse in DN",
  "script": "frappe.ui.form.on('Delivery Note', {\n\tonload(frm) {\n\t\tfrm.set_query('set_warehouse', () => {\n    return {\n        filters: {\n            custom_is_sales_warehouse: 1\n        }\n    };\n});\nsetTimeout(() => {\n            frm.set_query('customer', () => {\n                return {\n                    filters: {\n                        workflow_state: \"Approved\",\n                    }\n                };\n            });\n        }, 1000); // 1000 milliseconds = 1 second   \nfrm.set_query('set_target_warehouse', () => {\n    return {\n        filters: {\n            custom_is_sales_warehouse: 1\n        }\n    };\n});\n\t}\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2024-05-09 17:51:56.746913",
  "module": "Mantra Dev",
  "name": "Purchase warehouse in PO",
  "script": "frappe.ui.form.on(\"Purchase Order\", {\n  onload: function (frm) {\n    frm.set_query(\"set_warehouse\", () => {\n      return {\n        filters: {\n          custom_is_purchase_warehouse: 1,\n        },\n      };\n    });\n    frm.set_query(\"set_from_warehouse\", () => {\n      return {\n        filters: {\n          custom_is_purchase_warehouse: 1,\n        },\n      };\n    });\n    frm.set_query(\"supplier_warehouse\", () => {\n      return {\n        filters: {\n          custom_is_subcontracting_warehouse: 1,\n        },\n      };\n    });\n    setTimeout(() => {\n      frm.set_query(\"supplier\", () => {\n        return {\n          filters: {\n            workflow_state: \"Approved\",\n          },\n        };\n      });\n    }, 1000); // 1000 milliseconds = 1 second\n    if (frappe.user_roles.includes(\"System Manager\") == false) {\n        setTimeout(() => {\n            console.log(\"View Hide\");\n            frm.remove_custom_button(\"Update Items\");\n        }, 0);\n    }\n  },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 0,
  "modified": "2024-05-09 17:51:53.415505",
  "module": "Mantra Dev",
  "name": "Purchase warehouse in PR",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\tonload(frm) {\n\t\tfrm.set_query('set_warehouse', () => {\n    return {\n        filters: {\n            custom_is_purchase_warehouse: 1\n        }\n    };\n});\nfrm.set_query('rejected_warehouse', () => {\n    return {\n        filters: {\n            custom_is_purchase_warehouse: 1\n        }\n    };\n});\nsetTimeout(() => {\n            frm.set_query('supplier', () => {\n                return {\n                    filters: {\n                        workflow_state: 'Approved'\n                    }\n                };\n            });\n        }, 1000); // 1000 milliseconds = 1 second    \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Subcontracting Order",
  "enabled": 0,
  "modified": "2024-05-09 17:51:51.938868",
  "module": "Mantra Dev",
  "name": "Subcontracting warehouse in SubCO",
  "script": "frappe.ui.form.on('Subcontracting Order', {\n\tonload(frm) {\n\t\tfrm.set_query('supplier_warehouse', () => {\n    return {\n        filters: {\n            custom_is_subcontracting_warehouse: 1\n        }\n    };\n});\nfrm.set_query('set_warehouse', () => {\n    return {\n        filters: {\n            custom_is_purchase_warehouse: 1\n        }\n    };\n});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Subcontracting Receipt",
  "enabled": 0,
  "modified": "2024-05-09 17:51:51.215475",
  "module": "Mantra Dev",
  "name": "Subcontracting warehouse in SubCR",
  "script": "frappe.ui.form.on('Subcontracting Receipt', {\n\tonload(frm) {\n\t\tfrm.set_query('set_warehouse', () => {\n    return {\n        filters: {\n            custom_is_purchase_warehouse: 1\n        }\n    };\n});\nfrm.set_query('rejected_warehouse', () => {\n    return {\n        filters: {\n            custom_is_purchase_warehouse: 1\n        }\n    };\n});\nfrm.set_query('supplier_warehouse', () => {\n    return {\n        filters: {\n            custom_is_subcontracting_warehouse: 1\n        }\n    };\n});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-05-09 17:51:54.930007",
  "module": "Mantra Dev",
  "name": "Customer approved in SI",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    refresh: function(frm) {       \n        setTimeout(() => {\n            frm.set_query('customer', () => {\n                return {\n                    filters: {\n                        workflow_state: 'Approved'\n                    }\n                };\n            });\n        }, 1000); // 1000 milliseconds = 1 second              \n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2024-05-09 17:51:54.191383",
  "module": "Mantra Dev",
  "name": "Vendor approved in PI",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tonload(frm) {\n\t\tsetTimeout(() => {\n            frm.set_query('supplier', () => {\n                return {\n                    filters: {\n                        workflow_state: 'Approved'\n                    }\n                };\n            });\n        }, 1000); // 1000 milliseconds = 1 second    \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Tax Category",
  "enabled": 0,
  "modified": "2024-05-09 17:51:55.342792",
  "module": "Mantra Dev",
  "name": "Tax Category Account Default Filter",
  "script": "frappe.ui.form.on('Tax Category', {\r\tonload(frm,cdt,cdn) {\r\t\tfrm.set_query('income_account', 'custom_account_default', function(doc, cdt, cdn) {\r\t\t    let d = locals[cdt][cdn];\r            return {\r                filters: {\r                    is_group : 0,\r                    company: d.company\r                }\r            };\r        });\r        frm.set_query('export_sales_account', 'custom_account_default', function(doc, cdt, cdn) {\r            let d = locals[cdt][cdn];\r            return {\r                filters: {\r                    is_group : 0,\r                    company: d.company\r                }\r            };\r        });\r\t}\r});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2024-05-09 17:51:57.692115",
  "module": "Mantra Dev",
  "name": "PI Series Selection based on type",
  "script": "frappe.ui.form.on('Purchase Invoice', {\r\n    onload (frm){\r\n        if(frm.is_new()){\r\n            frm.set_query('custom_invoice_type', () => {\r\n                return {\r\n                    filters: {\r\n                        transaction_type: 'Purchase Invoice'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 0,
  "modified": "2024-05-09 17:51:55.781512",
  "module": "Mantra Dev",
  "name": "Material Request Settings",
  "script": "frappe.ui.form.on('Material Request', {\n    refresh(frm) {\n        var stock_entry_type = frm.doc.custom_stock_entry_type_reference;\n\n        if (stock_entry_type) {\n            frappe.db.get_value('Stock Entry Type', { 'name': stock_entry_type }, 'add_to_transit', function (data) {\n                var addtotransit = data.add_to_transit;\n\n                frappe.call({\n                    method: \"warehouse_manager_data_fetch_material_request\",\n                    args: {\n                        \"warehouse\": frm.doc.set_from_warehouse,\n                    },\n                    callback: function(r) {\n                        var warehouse_data = r.message;\n                        var wm = warehouse_data.flat();\n                        var currentuser = frappe.session.user;\n\n                        if (wm && wm.length > 0) {\n                            var index = wm.indexOf(currentuser);\n                            if (index !== -1) {\n                                wm.splice(index, 1);\n                                wm.unshift(currentuser);\n                            // wm.forEach(function(obj) {\n                            for (var i = 0; i < wm.length; i++) {\n                                // if (obj.warehouse_manager === currentuser) {\n                                if (wm[i] === currentuser) {\n                                    if (addtotransit === 1) {\n                                        frm.remove_custom_button(\"Material Transfer\", \"Create\");\n                                        console.log(\"1\");\n                                    } else if (addtotransit === 0) {\n                                        console.log(\"2\");\n                                        frm.remove_custom_button(\"Material Transfer (In Transit)\", \"Create\");\n                                    }\n                                    break;\n                                } \n                                \n                                else {\n                                    console.log(\"3\");\n                                    frm.remove_custom_button(\"Material Transfer\", \"Create\");\n                                    frm.remove_custom_button(\"Material Transfer (In Transit)\", \"Create\");\n                                }\n                            // });\n                            }\n                        }\n                        } else {\n                            console.log(\"4\");\n                            frm.remove_custom_button(\"Material Transfer\", \"Create\");\n                            frm.remove_custom_button(\"Material Transfer (In Transit)\", \"Create\");\n                        }\n                    }\n                });\n            });\n        } else {\n            console.log(\"5\");\n            frm.remove_custom_button(\"Material Transfer\", \"Create\");\n            frm.remove_custom_button(\"Material Transfer (In Transit)\", \"Create\");\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2024-05-09 17:51:58.330062",
  "module": "Mantra Dev",
  "name": "Stock Entry Settings",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t    var mr_no = frm.doc.custom_material_request_no;\n\t    if(mr_no && frm.doc.add_to_transit === 1){\n\t        frappe.call({\n\t\t\tmethod: \"warehouse_manager_data_fetch_stock_entry\",\n\t\t\targs: {\n\t\t\t\t\"mr_no\": mr_no,\n\t\t\t},\n\t\t}).then(r => {\n \t\t\t// fetching the data from the db\n\t\t\tvar warehouse_data = r.message;\n            var wm = warehouse_data.flat();\n            console.log(wm);\n\t\t\tcurrentuser = frappe.session.user;\n\t\t\t\n            var index = wm.indexOf(currentuser);\n            console.log(index);\n            if (index == -1) {\n                console.log(\"111\");\n                wm.splice(index, 1);\n                wm.unshift(currentuser);\n                // wm.forEach(function(obj) {\n                for (var i = 0; i < wm.length; i++) {\n                    // if (obj.warehouse_manager !== currentuser) {\n                    if (wm[i] == currentuser) {\n                        console.log(\"1\");\n                        { setTimeout(() => {\n                            frm.remove_custom_button(\"End Transit\");\n                        }, 0); }\n                        break; \n                    }\n                }\n            }\n            // });\n            \n\t\t});\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 0,
  "modified": "2024-05-09 17:51:50.510987",
  "module": "Mantra Dev",
  "name": "Payment Entry Settings",
  "script": "frappe.ui.form.on('Payment Entry', {\n\tonload:function(frm) {\n\t\tsetTimeout(() => {\n            frm.set_query('party_bank_account', () => {\n                return {\n                    filters: {\n                        is_company_account: 0,\n    \t\t\t\t\tparty_type: frm.doc.party_type,\n    \t\t\t\t\tparty: frm.doc.party,\n    \t\t\t\t\tworkflow_state: \"Approved\",\n                    }\n                };\n            });\n        }, 1000); // 1000 milliseconds = 1 second    \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Request",
  "enabled": 0,
  "modified": "2024-05-09 17:51:56.131471",
  "module": "Mantra Dev",
  "name": "Payment Request Settings",
  "script": "frappe.ui.form.on('Payment Request', {\n\tonload:function(frm) {\n\t\tvar party_type = frm.doc.party_type;\n\t\tvar party = frm.doc.party;\n\t\t\n\t\t    frappe.call({\n\t\t        method: \"get_party_name\",\n\t\t        args: {\n\t\t            \"party_type\": party_type,\n\t\t            \"party\": party,\n\t\t        }\n\t\t    }).then(r => {\n\t\t        var party_name = r.message;\n\t\t       frm.set_value('custom_party_name', party_name);\n\t\t    });\n\t\t  frm.set_query(\"bank_account\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tis_company_account: 0,\n\t\t\t\t\tparty_type: frm.doc.party_type,\n\t\t\t\t\tparty: frm.doc.party,\n\t\t\t\t\tworkflow_state: \"Approved\",\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2024-11-06 11:20:29.688158",
  "module": "Mantra Dev",
  "name": "Employee",
  "script": "frappe.ui.form.on('Employee', {\n\tdepartment(frm) {\n\t    frm.set_value(\"custom_opration_approver\",undefined)\n\t    frappe.call({\n\t        method:\"mantra_dev.backend_code.api.get_opration_approver\",\n\t        args:\n\t        {\n\t           department :cur_frm.doc.department,\n\t        },\n\t       callback: function(r) {\n\t            console.log(r.message.length)\n\t            if (r.message.length!=0){\n\t                setTimeout(() => {\n                        frm.set_query('custom_opration_approver', () => {\n                            return {\n                                filters: {\n                                    name: [\"in\",r.message]\n                                }\n                            };\n                        });\n                    }, 1000); // \n    // },\n\t            }\n\t            \n\t       }\n\t        \n\t    })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2024-11-06 11:20:17.948136",
  "module": "Mantra Dev",
  "name": "Remove Button - PO",
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\n\t     setTimeout(() => {\n            frm.remove_custom_button('Payment', 'Create');\n        }, 10);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2024-11-06 11:19:52.316633",
  "module": "Mantra Dev",
  "name": "Remove Button - PI",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t     setTimeout(() => {\n            frm.remove_custom_button('Payment', 'Create');\n        }, 10);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Report",
  "enabled": 1,
  "modified": "2024-11-06 11:20:12.266485",
  "module": "Mantra Dev",
  "name": "Report",
  "script": "frappe.ui.form.on(\"Report\", {\n\trefresh: function (frm) {\n\t\tif (frm.doc.is_standard === \"Yes\" && !frappe.boot.developer_mode) {\n\t\t\t// make the document read-only\n\t\t\tfrm.enable_save();\n\t\t} else {\n\t\t\tfrm.enable_save();\n\t\t}\n\n\t\tlet doc = frm.doc;\n\t\tif (!doc.__islocal) {\n\t\t\tfrm.add_custom_button(\n\t\t\t\t__(\"Show Report\"),\n\t\t\t\tfunction () {\n\t\t\t\t\tswitch (doc.report_type) {\n\t\t\t\t\t\tcase \"Report Builder\":\n\t\t\t\t\t\t\tfrappe.set_route(\"List\", doc.ref_doctype, \"Report\", doc.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Query Report\":\n\t\t\t\t\t\t\tfrappe.set_route(\"query-report\", doc.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Script Report\":\n\t\t\t\t\t\t\tfrappe.set_route(\"query-report\", doc.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Custom Report\":\n\t\t\t\t\t\t\tfrappe.set_route(\"query-report\", doc.name);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"fa fa-table\"\n\t\t\t);\n\t\t}\n\n\t\tif (doc.is_standard === \"Yes\" && frm.perm[0].write) {\n\t\t\tfrm.add_custom_button(\n\t\t\t\tdoc.disabled ? __(\"Enable Report\") : __(\"Disable Report\"),\n\t\t\t\tfunction () {\n\t\t\t\t\tfrm.call(\"toggle_disable\", {\n\t\t\t\t\t\tdisable: doc.disabled ? 0 : 1,\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tfrm.reload_doc();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tdoc.disabled ? \"fa fa-check\" : \"fa fa-off\"\n\t\t\t);\n\t\t}\n\n\t\tfrm.set_query(\"ref_doctype\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tistable: 0,\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t},\n\n\tref_doctype: function (frm) {\n\t\tif (frm.doc.ref_doctype) {\n\t\t\tfrm.trigger(\"set_doctype_roles\");\n\t\t}\n\t},\n\n\tset_doctype_roles: function (frm) {\n\t\treturn frm.call(\"set_doctype_roles\").then(() => {\n\t\t\tfrm.refresh_field(\"roles\");\n\t\t});\n\t},\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-11-06 11:19:57.872263",
  "module": "Mantra Dev",
  "name": "Auto Create Shipment",
  "script": "frappe.listview_settings['Delivery Note'] = {\n    onload: function(listview) {\n        // Add button to create shipment\n        listview.page.add_inner_button(__('Create Shipment'), function() {\n            // Define the dialog\n            let d = new frappe.ui.Dialog({\n                title: 'Shipment Form',\n                fields: [\n                    {\n                        fieldtype: 'Section Break',\n                        label: 'Shipment Details'\n                    },\n                    {\n                        label: 'Delivery Note ID',\n                        fieldname: 'dc_id',\n                        fieldtype: 'Link',\n                        options: \"Delivery Note\",\n                        reqd: 1,\n                        get_query: function() {\n                            return {\n                                filters: [\n                                    ['Delivery Note', 'docstatus', '=', 1]\n                                ]\n                            };\n                        }\n                    },\n                    {\n                        label: 'Service Provider',\n                        fieldname: 'service_provider',\n                        fieldtype: 'Data',\n                        reqd: 1,\n                    },\n                    {\n                        fieldtype: 'Column Break'\n                    },\n                    {\n                        label: 'AWB Number',\n                        fieldname: 'awb_number',\n                        fieldtype: 'Data',\n                        reqd: 1,\n                    },\n                    \n                ],\n                size: 'small', // small, large, extra-large \n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    console.log(values);\n                    // Add code to handle the submission\n                    frappe.call({\n                        method: \"mantra_dev.backend_code.api.create_shipment\",\n                        args: {\n                            values: values,\n                            delivery_note_id: values.dc_id,\n                            service_provider: values.service_provider,\n                            awb_number: values.awb_number,\n                            attachment: values.attachment,\n                            pickup_from: values.pickup_from,\n                            pickup_to: values.pickup_to,\n                            shipment_parcel: values.shipment_parcel\n                        },\n                        callback: function(response) {\n                            if (response.message) {\n                                frappe.msgprint(__('Shipment created successfully!'));\n                            } else {\n                                frappe.msgprint(__('An error occurred while creating the shipment.'));\n                            }\n                        }\n                    });\n                    d.hide();\n                }\n            });\n\n            // Show the dialog\n            d.show();\n        });\n\n        // Apply filter to show only completed delivery notes\n        listview.filter_area.add([\n            [\"Delivery Note\", \"status\", \"=\", \"Completed\"]\n        ]);\n    }\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 0,
  "modified": "2024-11-06 11:16:13.805864",
  "module": "Mantra Dev",
  "name": "Payment Entry",
  "script": "frappe.listview_settings['Payment Entry'] = { \r\n        refresh: function(listview) {\r\n                $(\".layout-side-section\").hide(); \r\n            \r\n        } \r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2024-10-24 15:21:16.221508",
  "module": "Mantra Dev",
  "name": "Material Request - Filter",
  "script": "frappe.ui.form.on('Material Request', {\n\trefresh(frm) {\n\t\t// your code here\n\t\t\tfrm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n\t\t\tif (doc.material_request_type == \"Customer Provided\") {\n\t\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tcustomer: doc.customer,\n\t\t\t\t\t\tis_stock_item: 1,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (doc.material_request_type == \"Material Transfer\") {\n\t\t\t\t// frappe.msgprint('Helllllllllllo---------')\n\t\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: { is_fixed_asset: 0 },\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t},\n\tmaterial_request_type: function (frm) {\n\t\n\n\t\tfrm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n\t\t\tif (doc.material_request_type == \"Customer Provided\") {\n\t\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\tcustomer: doc.customer,\n\t\t\t\t\t\tis_stock_item: 1,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (doc.material_request_type == \"Material Transfer\") {\n\t\t\t\t// frappe.msgprint('Helllllllllllo---------')\n\t\t\t\treturn {\n\t\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\t\tfilters: { is_fixed_asset: 0 },\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t},\n\n})",
  "view": "Form"
 }
]